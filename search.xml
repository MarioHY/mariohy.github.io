<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Linux基础(3)-vim实用操作</title>
      <link href="/2025/09/20/Linux%E5%9F%BA%E7%A1%80-3-vim%E5%AE%9E%E7%94%A8%E6%93%8D%E4%BD%9C/"/>
      <url>/2025/09/20/Linux%E5%9F%BA%E7%A1%80-3-vim%E5%AE%9E%E7%94%A8%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h2 id="vim"><a href="#vim" class="headerlink" title="vim"></a>vim</h2><h3 id="1-normal"><a href="#1-normal" class="headerlink" title="1.normal"></a>1.normal</h3><h4 id="移动光标"><a href="#移动光标" class="headerlink" title="移动光标"></a>移动光标</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">h（hang）# 左移一位</span><br><span class="line">j（jump）# 下移一位</span><br><span class="line">k（kick）# 上移一位</span><br><span class="line">l（leap）# 右移一位</span><br><span class="line">nh、nj、nk、nl # 左、下、上、右移动n位</span><br><span class="line">0 # 移动到行头</span><br><span class="line">^ # 移动到行头</span><br><span class="line">$ # 移动到行尾</span><br><span class="line">G # 移动光标到末尾</span><br><span class="line">nG # 移动到第n行</span><br><span class="line">gg # 快速移动光标到首行</span><br><span class="line">w # 移动到下一个单词头</span><br><span class="line">e # 移动到下一个单词尾</span><br><span class="line">b # 移动到上一个单词头</span><br><span class="line">f+字符 # 移动到当前行下一个匹配成功的单个字符</span><br></pre></td></tr></table></figure><h4 id="删除内容"><a href="#删除内容" class="headerlink" title="删除内容"></a>删除内容</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">x # 剪切当前光标字符</span><br><span class="line">dd # 剪切当前行</span><br><span class="line">ndd # 剪切下n行（n行包括当前行）</span><br><span class="line">d0 # 剪切当前光标到行首部分</span><br><span class="line">d^ # 剪切当前光标到行首部分</span><br><span class="line">d$ # 剪切当前光标到行尾部分</span><br><span class="line">D # 剪切当前光标到行尾</span><br><span class="line">dw # 剪切到下一个单词头</span><br><span class="line">de # 剪切到下一个单词尾</span><br><span class="line">dG # 快速剪切光标到底部的所有内容</span><br></pre></td></tr></table></figure><h4 id="复制内容"><a href="#复制内容" class="headerlink" title="复制内容"></a>复制内容</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yy # 复制当前行</span><br><span class="line">nyy # 复制n行</span><br></pre></td></tr></table></figure><p><strong>粘贴内容</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pp # 粘贴复制或者剪切内容</span><br><span class="line">npp # 粘贴n次</span><br></pre></td></tr></table></figure><h4 id="撤销内容"><a href="#撤销内容" class="headerlink" title="撤销内容"></a>撤销内容</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">u # 撤销到上一步操作</span><br><span class="line">ctrl+r # 反撤销</span><br></pre></td></tr></table></figure><h4 id="底行模式"><a href="#底行模式" class="headerlink" title=":底行模式"></a><code>:</code>底行模式</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">wq # 保存并退出</span><br><span class="line">q! # 强制退出不保存</span><br><span class="line">x # 保存并退出</span><br><span class="line">set nu # 显示行号，全称set number</span><br><span class="line">set nonu # 取消行号</span><br><span class="line">set cursorcolumn # 设置光标列，利于查看列对齐情况</span><br><span class="line">set nocursorcolumn # 取消设置光标列</span><br><span class="line">s/// # 只替换光标所在行的第一个单词</span><br><span class="line">s///g # 替换光标所在行的单词</span><br><span class="line">%s///g # 替换文件中所有的单词</span><br><span class="line">%d # 清除全文</span><br><span class="line">reg a # 查看录制的宏a内容</span><br></pre></td></tr></table></figure><h4 id="宏操作"><a href="#宏操作" class="headerlink" title="宏操作"></a>宏操作</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 宏录制</span><br><span class="line">按q加a-z或0-9进行宏定义 # 例如 qa，定义宏为a</span><br><span class="line">执行你要进行重复的一系列操作</span><br><span class="line">q # 记录操作完毕</span><br><span class="line"></span><br><span class="line"># 宏使用</span><br><span class="line">@a # 执行宏a</span><br><span class="line">n@a # 执行n次宏a</span><br></pre></td></tr></table></figure><h3 id="2-insert"><a href="#2-insert" class="headerlink" title="2.insert"></a>2.insert</h3><h4 id="进入插入模式的方法"><a href="#进入插入模式的方法" class="headerlink" title="进入插入模式的方法"></a>进入插入模式的方法</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">o # 新建光标所在的下一行进入插入模式</span><br><span class="line">O # 新建光标所在的上一行进入插入模式</span><br><span class="line">C # 删除光标所在行进入插入模式</span><br><span class="line">a # 当前光标后追加进入插入模式</span><br><span class="line">A # 当前光标行尾进入插入模式</span><br><span class="line">i # 当前光标进入插入模式</span><br><span class="line">I # 当前光标所在行行首插入</span><br></pre></td></tr></table></figure><h4 id="退出编辑模式"><a href="#退出编辑模式" class="headerlink" title="退出编辑模式"></a>退出编辑模式</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ESC</span><br></pre></td></tr></table></figure><h3 id="3-visual"><a href="#3-visual" class="headerlink" title="3.visual"></a>3.visual</h3><h4 id="进入可视化模式"><a href="#进入可视化模式" class="headerlink" title="进入可视化模式"></a>进入可视化模式</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">v # 进入字符可视化模式</span><br><span class="line">V # 进入字符可视行模式</span><br><span class="line">Ctrl+v # 进入字符可视块模式</span><br></pre></td></tr></table></figure><h4 id="可视化移动"><a href="#可视化移动" class="headerlink" title="可视化移动"></a>可视化移动</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">同normal移动</span><br></pre></td></tr></table></figure><h4 id="可视化基本操作"><a href="#可视化基本操作" class="headerlink" title="可视化基本操作"></a>可视化基本操作</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">d # 删除可视化部分</span><br><span class="line">y # 复制可视化部分</span><br><span class="line">p # 把要粘贴的内容替换可视化部分</span><br><span class="line">u # 把可视化部分字母全变成小写</span><br><span class="line">U # 把可视化部分字母全变成大写</span><br></pre></td></tr></table></figure><h4 id="添加多行内容"><a href="#添加多行内容" class="headerlink" title="添加多行内容"></a>添加多行内容</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Ctrl+v <span class="comment">#进入可视块模式</span></span><br><span class="line">可视化块移动到要进行多行操作的列，单列</span><br><span class="line"><span class="built_in">shift</span>+i进行插入</span><br><span class="line">输入内容</span><br><span class="line">ESC退出</span><br></pre></td></tr></table></figure><h4 id="添加多行内容到行尾"><a href="#添加多行内容到行尾" class="headerlink" title="添加多行内容到行尾"></a>添加多行内容到行尾</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Ctrl+v #进入可视块模式</span><br><span class="line">可视化块移动到要进行多行操作的列，单列</span><br><span class="line">$移动光标到行尾</span><br><span class="line">shift+a进行插入</span><br><span class="line">输入内容</span><br><span class="line">ESC退出</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 基础 </tag>
            
            <tag> vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux基础(2)-基础命令行操作</title>
      <link href="/2025/09/20/Linux%E5%9F%BA%E7%A1%80-2-%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%93%8D%E4%BD%9C/"/>
      <url>/2025/09/20/Linux%E5%9F%BA%E7%A1%80-2-%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h2 id="命令行"><a href="#命令行" class="headerlink" title="命令行"></a>命令行</h2><h3 id="1-系统启动相关命令"><a href="#1-系统启动相关命令" class="headerlink" title="1.系统启动相关命令"></a>1.系统启动相关命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">shutdown <span class="comment"># 关机，默认1分钟后关机</span></span><br><span class="line"></span><br><span class="line">shutdown -h now <span class="comment"># 现在立即关机</span></span><br><span class="line">shutdown -h 5 <span class="comment"># 提示5分钟之后关机</span></span><br><span class="line"></span><br><span class="line">poweroff <span class="comment"># 直接关机</span></span><br><span class="line"></span><br><span class="line">init 0 <span class="comment"># 直接关键</span></span><br><span class="line"></span><br><span class="line">shutdown -r now <span class="comment"># 立即重启</span></span><br><span class="line">shutdown -r 5 <span class="comment"># 5分钟后重启</span></span><br><span class="line"></span><br><span class="line">reboot <span class="comment"># 直接重启</span></span><br><span class="line">init 6 <span class="comment"># 直接重启</span></span><br></pre></td></tr></table></figure><p><code>init</code>中的数字含义如下表：</p><ul><li>0：关机</li><li>1：root单用户模式</li><li>2：多用户模式</li><li>3：完全多用户模式</li><li>4：安全模式</li><li>5：图形化</li><li>6：重启</li></ul><h3 id="2-关键点"><a href="#2-关键点" class="headerlink" title="2.关键点"></a>2.关键点</h3><h4 id="2-1终端"><a href="#2-1终端" class="headerlink" title="2.1终端"></a>2.1终端</h4><p><strong>shell指令结构</strong>：<code>命令</code>  + <code>选项</code> +  <code>参数</code></p><p><strong>物理控制台</strong> ： 物理机上控制的桌面环境</p><p><strong>虚拟控制台</strong> ： </p><ul><li><strong>&#x2F;dev&#x2F;tty{1..6}</strong>，<code>物理机</code>上的<code>虚拟控制台</code>，物理机切换虚拟控制台命令是<code>ctrl+alt&#123;F1..F6&#125;</code></li><li><strong>&#x2F;dev&#x2F;pts&#x2F;{0..N}</strong>，ssh<code>远程</code>连接的<code>虚拟控制台</code></li></ul><h4 id="2-2终端快捷键"><a href="#2-2终端快捷键" class="headerlink" title="2.2终端快捷键"></a>2.2终端快捷键</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">ctrl+a：到命令行头</span><br><span class="line"></span><br><span class="line">ctrl+e：到命令行尾</span><br><span class="line"></span><br><span class="line">ctrl+u：光标前面的全删除</span><br><span class="line"></span><br><span class="line">ctrl+r：历史记录搜索命令</span><br><span class="line"></span><br><span class="line">ctrl+f：向右</span><br><span class="line"></span><br><span class="line">ctrl+b：向左</span><br><span class="line"></span><br><span class="line">ctrl+p：向上</span><br><span class="line"></span><br><span class="line">ctrl+n：向下</span><br><span class="line"></span><br><span class="line">ctrl+_：撤销</span><br><span class="line"></span><br><span class="line">ctrl+y：粘帖被删除</span><br><span class="line"></span><br><span class="line">ctrl+h：左删一个字母</span><br><span class="line"></span><br><span class="line">ctrl+d：右删一个字母</span><br><span class="line"></span><br><span class="line">ctrl+w：向左删一个单词</span><br><span class="line"></span><br><span class="line">alt+d：向右删一个单词</span><br><span class="line"></span><br><span class="line">alt+b：向左一个单词</span><br><span class="line"></span><br><span class="line">alt+f：向右一个单词</span><br><span class="line"></span><br><span class="line">alt+.：输入最近一个指令的参数</span><br></pre></td></tr></table></figure><h4 id="2-3关键命令理解"><a href="#2-3关键命令理解" class="headerlink" title="2.3关键命令理解"></a>2.3关键命令理解</h4><p><code>cd -</code> ：回到上一个路径</p><p><code>cd</code>&#x2F;<code>cd ~</code> ：回到用户主目录</p><p><code>touch</code> ：对已存在的文件touch改变的是时间戳，<code>不会覆盖文件内容</code>，也就是改变文件的时间戳为当前时间，<code>-d</code>指定<code>时间戳</code></p><p><code>ls</code> ：list列表显示</p><ul><li><p><code>-a</code>(all)全部</p></li><li><p><code>-l(</code>long)长格式</p></li><li><p><code>-i</code>(inode)文件索引的inode编号</p></li><li><p><code>-d</code>(directory)只显示目录</p></li><li><p><code>-t</code>(time)按时间排序</p></li><li><p><code>-r</code>(reverse)逆序</p></li><li><p><code>-R</code>(recursive)递归显示子目录</p></li></ul><p><code>mkdir -p</code> ：创建目录时自动创建父目录(parents)；<code>-v</code>(verbose:冗长的）显示过程；<code>-m</code>(mode:模式)指定权限</p><p><code>cat -n</code> ： 只显示文件<code>num</code>行数</p><p><code>tree -d</code> ：只显示<code>directory目录</code>结构</p><p><code>tree -L 1</code> ：显示目录树的<code>level深度</code>为1</p><p><code>cp</code> ：<code>cp</code>复制可以看做<code>cp -i</code>的别名，<code>-i</code>(interactive)交互式的意思；</p><p><code>\cp -r mydir /tmp</code> ：</p><ul><li>复制<code>mydir目录</code>到&#x2F;tmp目录下，有同名文件<code>不询问</code>直接覆盖； </li><li><code>\</code>是取消别名的意思，<code>\ll</code>就是取消<code>ls -l</code>这个别名，运行就报错</li><li><code>\cp</code>就是取消<code>cp -i</code>这个别名，就不会有interactive交互式。</li><li><code>-r</code>（recursive）递归；<code>-p</code>（preserve）保留原文件属性</li></ul><h4 id="2-4基础文件结构理解"><a href="#2-4基础文件结构理解" class="headerlink" title="2.4基础文件结构理解"></a>2.4基础文件结构理解</h4><p>&#x2F;boot：启动文件(存内核的)，&#x2F;boot&#x2F;grub&#x2F;grub.cfg引导加载的配置文件</p><p>&#x2F;dev：设备，例如硬盘&#x2F;dev&#x2F;sda,&#x2F;dev&#x2F;sdb,光驱&#x2F;dev&#x2F;cdrom</p><p>&#x2F;etc：系统配置文件，例如&#x2F;etc&#x2F;passwd,&#x2F;etc&#x2F;group….</p><p>&#x2F;home：用户主目录, 例如 &#x2F;home&#x2F;user1, &#x2F;home&#x2F;user2</p><p>&#x2F;root：管理员的家目录</p><p>&#x2F;run：上一次以来启动运行的数据</p><p>&#x2F;tmp：临时目录在的位子，类似window的回收站，移动替代删除</p><p>&#x2F;opt ： 第三方软件默认安装的位置</p><p>&#x2F;var：特定于系统的可变数据应在系统启动之间保持永久性，例如日志文件</p><p>&#x2F;proc：开机进程数据，关机就没</p><p>&#x2F;usr：用户程序文件所在的位置，安装的软件、共享的库（包括文件）和只读程序数据。注：usr可以称user，但标准来讲应该是<code>Unix System Resource</code></p><p>&#x2F;lost+found ：文件损坏、断电等导致的孤立文件存放到这。一般文件系统坏了你修复文件系统可能会有</p><p>&#x2F;mnt ： 临时挂载目录；；<code>/dev/cdrom</code> linux的ISO镜像光驱在这，指向着<code>/dev/sr0</code>，也就是<code>lsblk</code>中的<code>sr0</code>，<code>mount /dev/cdrom /mnt</code>可以挂载光驱到临时&#x2F;mnt文件下，<code>umount /mnt</code>取消挂载</p><p>&#x2F;sys ：管理系统设备的文件夹，类虚拟文件系统ramdisk ，基于磁盘模拟技术，rd.break的rd就是ramdisk的缩写，新的用的是initramfs</p><p><code>/usr/bin</code>：用户二进制系统命令存放位置</p><p><code>/usr/sbin</code>：超级管理员命令所在位置</p><p><code>/usr/local</code>：本地自定义软件</p><p>&#x2F;bin –&gt; <code>/usr/bin</code></p><p>&#x2F;sbin –&gt; <code>/usr/sbin</code></p><p>&#x2F;lib –&gt; <code>/usr/lib</code></p><p>&#x2F;lib64 –&gt; <code>/usr/lib64</code></p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 基础 </tag>
            
            <tag> 命令行 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux基础(1)-虚拟机网络配置</title>
      <link href="/2025/09/19/Linux%E5%9F%BA%E7%A1%80-1-%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/"/>
      <url>/2025/09/19/Linux%E5%9F%BA%E7%A1%80-1-%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="虚拟机VMware网络"><a href="#虚拟机VMware网络" class="headerlink" title="虚拟机VMware网络"></a>虚拟机VMware网络</h2><h3 id="虚拟机网络服务"><a href="#虚拟机网络服务" class="headerlink" title="虚拟机网络服务"></a>虚拟机网络服务</h3><h4 id="network"><a href="#network" class="headerlink" title="network"></a>network</h4><p>旧版的网络服务，早期的Linux服务器和嵌入设备，提供稳定的<code>静态网络管理</code>。</p><p><strong>配置文件</strong>：<code>/etc/sysconfig/network-scripts/ifcfg-ethxx</code></p><p><strong>如下是配置静态ip的关键点</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ONBOOT=<span class="built_in">yes</span></span><br><span class="line">BOOTPROTO=static</span><br><span class="line">IPADDR=192.168.113.110</span><br><span class="line">NETMASK=255.255.255.0</span><br><span class="line">GATEWAY=192.168.113.245</span><br><span class="line">DNS1=114.114.114.114</span><br><span class="line">DNS2=8.8.8.8</span><br></pre></td></tr></table></figure><ul><li>ONBOOT ：是否启用该设备</li><li>BOOTPROTO ： 如何获取IP的参数。例如none、static、dhcp、bootp</li><li>IPADDR ： 自定义的IP地址</li><li>NETMASK ： 划分子网</li><li>GATEWAY ： 网关地址，转到Internet的中间人</li><li>DNS ： 解析域名的IP地址</li></ul><h4 id="NetworkManager"><a href="#NetworkManager" class="headerlink" title="NetworkManager"></a>NetworkManager</h4><p>新版的网络服务， <code>动态网络环境</code>的支持，一个高级的网络管理器，提供了有nmtui图形化管理、nmcli命令行工具并提供了自动检测和配置网络连接的功能，支持多分网络连接管理方式，例如以太网、WIFI等。</p><p><strong>配置文件</strong>：  <code>/etc/NetworkManager/system-connections/*</code></p><p>NetworkManager管理就方便的多，可以用<code>nmtui</code>或<code>nmcli</code>修改或添加网络连接配置文件，记不住<code>nmcli</code>的可以<code>man nmcli-examples</code>或者修改配置文件，if you know，you know。</p><h4 id="network和NetworkManager服务"><a href="#network和NetworkManager服务" class="headerlink" title="network和NetworkManager服务"></a>network和NetworkManager服务</h4><ol><li>停止<code>network服务</code>只启用<code>NetworkManager服务</code>的情况下，NetworkManager同样会检测network配置文件(<code>/etc/sysconfig/network-scripts/ifcfg-ethxx</code>)，如果对于network中<code>ONBOOT=yes</code>的文件同样会被加载</li><li><code>network服务</code>和<code>NetworkManager服务</code>同时存在的情况下，<code>network</code>读取所有<code>ifcfg</code>文件，对于每个<code>ONBOOT=yes</code>的文件，它检查<code>NetworkManager</code>是否已经从该<code>ifcfg</code>文件启动设备。如果<code>NetworkManager</code>正在启动该设备或已经启动该设备，则不再对该文件执行任何操作，并检查下一个<code>ONBOOT=yes</code>文件。如果<code>NetworkManager</code>还没有启动该设备，那么初始化脚本将继续下去，并为该ifcfg文件调用<code>ifup</code>。</li><li>如果<code>虚拟机</code>采用<code>NAT</code>模式，你在<code>虚拟网络编辑器</code>那里<code>关闭</code>了<code>dhcp服务</code>，在<code>安装过程</code>重<code>配置</code>了自己manual的<code>IP地址</code>，<code>默认</code>使用<code>network</code>配置IP地址，默认<code>NetworkManager</code>的配置为空，那么需要关闭<code>NetworkManager服务</code>，否则<code>NetworkManager服务</code>不会显示IP地址。</li></ol><hr><h3 id="虚拟机网络模式"><a href="#虚拟机网络模式" class="headerlink" title="虚拟机网络模式"></a>虚拟机网络模式</h3><h4 id="Bridged（桥接模式）"><a href="#Bridged（桥接模式）" class="headerlink" title="Bridged（桥接模式）"></a>Bridged（桥接模式）</h4><p><img src="/img/blog/images/BasicLinux/1.jpg" alt="1"></p><p><img src="/img/blog/images/BasicLinux/2.jpg" alt="2"></p><p><strong>宿主机与虚拟机与外网互通，可以相互访问</strong></p><hr><h4 id="NAT（网络地址转换）"><a href="#NAT（网络地址转换）" class="headerlink" title="NAT（网络地址转换）"></a>NAT（网络地址转换）</h4><p><img src="/img/blog/images/BasicLinux/3.jpg" alt="3"></p><p><strong>如下图</strong> : 虚拟机可以通过<code>虚拟的NAT网关</code>转到<code>宿主机网卡IP</code>进行上网，<code>宿主机</code>可以通过<code>VMnet8虚拟网卡</code>来访问虚拟机，虚拟机访问不了宿主机。</p><p><img src="/img/blog/images/BasicLinux/5.png" alt="5"></p><hr><h4 id="Host-Only（仅主机模式）"><a href="#Host-Only（仅主机模式）" class="headerlink" title="Host-Only（仅主机模式）"></a>Host-Only（仅主机模式）</h4><p><img src="/img/blog/images/BasicLinux/4.jpg" alt="4"></p><p><strong>如下图,虚拟机只能在虚拟机之间通讯,虚拟机不能访问外网,主机可以通过VMnet1虚拟网卡访问虚拟机</strong></p><p><img src="/img/blog/images/BasicLinux/6.png" alt="6"></p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 基础 </tag>
            
            <tag> 虚拟机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>rocky部署k8s</title>
      <link href="/2025/09/18/rocky%E9%83%A8%E7%BD%B2k8s/"/>
      <url>/2025/09/18/rocky%E9%83%A8%E7%BD%B2k8s/</url>
      
        <content type="html"><![CDATA[<h1 id="rocky部署k8s"><a href="#rocky部署k8s" class="headerlink" title="rocky部署k8s"></a>rocky部署k8s</h1><hr><h2 id="安装前配置"><a href="#安装前配置" class="headerlink" title="安装前配置"></a>安装前配置</h2><table><thead><tr><th>角色</th><th>IP地址</th><th>组件</th></tr></thead><tbody><tr><td>master</td><td>192.168.192.164</td><td>docker，kubectl，kubeadm，kubelet</td></tr><tr><td>node1</td><td>192.168.192.165</td><td>docker，kubectl，kubeadm，kubelet</td></tr><tr><td>node2</td><td>192.168.192.166</td><td>docker，kubectl，kubeadm，kubelet</td></tr></tbody></table><p><strong>配置服务器&#x2F;etc&#x2F;hosts文件</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">192.168.192.164 master</span><br><span class="line">192.168.192.165 node1</span><br><span class="line">192.168.192.166 node2</span><br></pre></td></tr></table></figure><p><strong>配置时间同步</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl <span class="built_in">enable</span> --now chronyd</span><br></pre></td></tr></table></figure><p><strong>禁用iptable和firewalld服务</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl <span class="built_in">disable</span> --now firewalld</span><br><span class="line"><span class="built_in">sudo</span> systemctl <span class="built_in">disable</span> --now iptables</span><br></pre></td></tr></table></figure><p><strong>关闭selinux</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> setenforce 0</span><br><span class="line"><span class="built_in">sudo</span> sed -i <span class="string">&#x27;s/^SELINUX=enforcing$/SELINUX=permissive/&#x27;</span> /etc/selinux/config</span><br></pre></td></tr></table></figure><p><strong>关闭swap空间</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> sed -ri <span class="string">&#x27;s/.*swap.*/#&amp;/&#x27;</span> /etc/fstab</span><br><span class="line"><span class="built_in">sudo</span> swapoff -a</span><br></pre></td></tr></table></figure><p><strong>转发 IPv4 并让 iptables 看到桥接流量</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF | sudo tee /etc/modules-load.d/k8s.conf</span></span><br><span class="line"><span class="string">overlay</span></span><br><span class="line"><span class="string">br_netfilter</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">sudo</span> modprobe overlay</span><br><span class="line"><span class="built_in">sudo</span> modprobe br_netfilter</span><br></pre></td></tr></table></figure><p><strong>设置所需的 sysctl 参数，参数在重新启动后保持不变</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF | sudo tee /etc/sysctl.d/k8s.conf</span></span><br><span class="line"><span class="string">net.bridge.bridge-nf-call-iptables  = 1</span></span><br><span class="line"><span class="string">net.bridge.bridge-nf-call-ip6tables = 1</span></span><br><span class="line"><span class="string">net.ipv4.ip_forward                 = 1</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><p><strong>应用 sysctl 参数而不重新启动</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> sysctl --system</span><br></pre></td></tr></table></figure><hr><h2 id="安装docker及containerd容器"><a href="#安装docker及containerd容器" class="headerlink" title="安装docker及containerd容器"></a>安装docker及containerd容器</h2><p><strong>移除docker</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> yum remove docker \</span><br><span class="line">                  docker-client \</span><br><span class="line">                  docker-client-latest \</span><br><span class="line">                  docker-common \</span><br><span class="line">                  docker-latest \</span><br><span class="line">                  docker-latest-logrotate \</span><br><span class="line">                  docker-logrotate \</span><br><span class="line">                  docker-engine</span><br></pre></td></tr></table></figure><p><strong>安装yum-utils包（提供了yum-config-manager)</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> yum install -y yum-utils</span><br></pre></td></tr></table></figure><p><strong>添加docker源</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> yum-config-manager --add-repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line"><span class="built_in">sudo</span> sed -i <span class="string">&#x27;s+download.docker.com+mirrors.aliyun.com/docker-ce+&#x27;</span> /etc/yum.repos.d/docker-ce.repo</span><br></pre></td></tr></table></figure><p><strong>安装docker引擎、容器和docker组合</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> yum install -y docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure><ul><li><input checked="" disabled="" type="checkbox"> docker-ce ： Docker Community Edition（Docker 社区版）</li><li><input checked="" disabled="" type="checkbox"> docker-ce-cli ： Docker 命令行工具</li><li><input checked="" disabled="" type="checkbox"> containerd.io ：  管理和运行容器的守护进程。它推送和拉动镜像，管理存储和网络，并监督容器的运行，io 是其开发者 Docker 公司的域名后缀</li></ul><p><strong>流程</strong>：<code>docker运行命令</code> –&gt; <code>docker-ce-cli接受解析命令,发送</code> –&gt; <code>docker-ce后台检测是否拉取，转发</code> –&gt; <code>containerd.io与内核交互，创建隔离环境</code></p><p><strong>启动docker</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl <span class="built_in">enable</span> --now docker </span><br></pre></td></tr></table></figure><p><strong>添加用户对docker的访问权限</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> usermod -aG docker <span class="variable">$USER</span></span><br></pre></td></tr></table></figure><p><strong>docker加速配置</strong><br><strong>1.docker配置镜像加速</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> <span class="built_in">mkdir</span> -p /etc/docker</span><br><span class="line"></span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">tee</span> /etc/docker/daemon.json &lt;&lt;-<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;registry-mirrors&quot;</span>: [ </span><br><span class="line">    <span class="string">&quot;https://docker.1panel.live&quot;</span>, </span><br><span class="line">    <span class="string">&quot;https://hub.rat.dev&quot;</span>, </span><br><span class="line">    <span class="string">&quot;https://docker.actima.top&quot;</span></span><br><span class="line">  ] </span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>可用的镜像加速地址</p><blockquote><ul><li><a href="https://docker.1panel.live/">https://docker.1panel.live</a> </li><li><a href="https://hub.rat.dev/">https://hub.rat.dev</a> </li><li><a href="https://docker.actima.top/">https://docker.actima.top</a> </li><li><a href="https://docker.m.daocloud.io/">https://docker.m.daocloud.io</a> </li><li><a href="https://docker.1ms.run/">https://docker.1ms.run</a> </li><li><a href="https://docker.aityp.com/">https://docker.aityp.com</a> </li><li><a href="https://dockerhub.xisoul.cn/">https://dockerhub.xisoul.cn</a> </li><li><a href="https://hub.littlediary.cn/">https://hub.littlediary.cn</a></li></ul></blockquote><p><strong>重启服务</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl daemon-reload</span><br><span class="line"><span class="built_in">sudo</span> systemctl restart docker</span><br></pre></td></tr></table></figure><p><strong>2.docker配置代理加速</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /etc/systemd/system/docker.service.d/http-proxy.conf </span><br><span class="line">[Service] </span><br><span class="line">Environment=<span class="string">&quot;HTTP_PROXY=http://localhost:7897/&quot;</span> </span><br><span class="line">Environment=<span class="string">&quot;HTTPS_PROXY=http://localhost:7897/&quot;</span> </span><br><span class="line">Environment=<span class="string">&quot;NO_PROXY=localhost,127.0.0.1,192.168.*.*,10.*.*.*,*.local,hub.kubecc.com:5000&quot;</span> </span><br></pre></td></tr></table></figure><p><strong>重启服务</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl daemon-reload</span><br><span class="line"><span class="built_in">sudo</span> systemctl restart docker</span><br></pre></td></tr></table></figure><hr><h2 id="安装kubelet、kubeadm、kubectl"><a href="#安装kubelet、kubeadm、kubectl" class="headerlink" title="安装kubelet、kubeadm、kubectl"></a>安装kubelet、kubeadm、kubectl</h2><p><strong>配置k8s的yum源</strong><br><strong>1.配置阿里源</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF | sudo tee /etc/yum.repos.d/kubernetes.repo</span></span><br><span class="line"><span class="string">[kubernetes]</span></span><br><span class="line"><span class="string">name=Kubernetes</span></span><br><span class="line"><span class="string">baseurl=http://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64</span></span><br><span class="line"><span class="string">enabled=1</span></span><br><span class="line"><span class="string">gpgcheck=1</span></span><br><span class="line"><span class="string">gpgkey=http://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg</span></span><br><span class="line"><span class="string">   http://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><p><strong>2.配置清华源</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF | sudo tee /etc/yum.repos.d/kubernetes.repo</span></span><br><span class="line"><span class="string">[kubernetes]</span></span><br><span class="line"><span class="string">name=kubernetes</span></span><br><span class="line"><span class="string">baseurl=https://mirrors.tuna.tsinghua.edu.cn/kubernetes/yum/repos/kubernetes-el7-$basearch</span></span><br><span class="line"><span class="string">name=Kubernetes</span></span><br><span class="line"><span class="string">baseurl=https://mirrors.tuna.tsinghua.edu.cn/kubernetes/core:/stable:/v1.28/rpm/</span></span><br><span class="line"><span class="string">enabled=1</span></span><br><span class="line"><span class="string">gpgcheck=1</span></span><br><span class="line"><span class="string">gpgkey=https://pkgs.k8s.io/core:/stable:/v1.28/rpm/repodata/repomd.xml.key</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><p><strong>安装 kubelet，kubeadm，kubectl</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> yum install kubeadm kubectl kubelet</span><br></pre></td></tr></table></figure><p><strong>配置kubelet的cgroup</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysconfig/kubelet</span><br><span class="line"></span><br><span class="line">KUBELET_CGROUP_ARGS=<span class="string">&quot;--cgroup-driver=systemd&quot;</span></span><br><span class="line">KUBE_PROXY_MODE=<span class="string">&quot;ipvs&quot;</span></span><br></pre></td></tr></table></figure><p><strong>设置kubelet开机自启</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl <span class="built_in">enable</span> kubelet</span><br></pre></td></tr></table></figure><h2 id="配置containerd默认容器"><a href="#配置containerd默认容器" class="headerlink" title="配置containerd默认容器"></a>配置containerd默认容器</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1.使用如下命令重置config.toml文件</span></span><br><span class="line">containerd config default &gt; /etc/containerd/config.toml</span><br><span class="line"><span class="comment">#2.编辑配置文件</span></span><br><span class="line"><span class="comment"># vim /etc/containerd/config.toml</span></span><br><span class="line"><span class="comment"># SystemdCgroup = false 改为 SystemdCgroup = true</span></span><br><span class="line">sed -i <span class="string">&#x27;s#SystemdCgroup = false#SystemdCgroup = true#g&#x27;</span> /etc/containerd/config.toml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.修改 sandbox_image = &quot;k8s.gcr.io/pause:3.8&quot;</span></span><br><span class="line"><span class="comment">#sandbox_image = &quot;registry.cn-hangzhou.aliyuncs.com/google_containers/pause:3.9&quot;</span></span><br><span class="line"></span><br><span class="line">sed -i <span class="string">&#x27;s#sandbox_image = &quot;registry.k8s.io/pause:3.8&quot;#sandbox_image = &quot;registry.cn-hangzhou.aliyuncs.com/google_containers/pause:3.9&quot;#g&#x27;</span> /etc/containerd/config.toml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.设置开机自启动</span></span><br><span class="line">systemctl <span class="built_in">enable</span> containerd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.重新启动containerd</span></span><br><span class="line">systemctl restart containerd</span><br><span class="line"><span class="comment"># 6. 列出containerd所有镜像命令</span></span><br><span class="line">ctr images <span class="built_in">ls</span></span><br></pre></td></tr></table></figure><h2 id="使用kubeadm进行初始化"><a href="#使用kubeadm进行初始化" class="headerlink" title="使用kubeadm进行初始化"></a>使用kubeadm进行初始化</h2><p><strong><code>master节点运行</code></strong><br><strong><code>root</code></strong><br><strong>创建集群</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">kubeadm init \</span><br><span class="line">--apiserver-advertise-address=192.168.192.164 \</span><br><span class="line">--control-plane-endpoint=master \</span><br><span class="line">--image-repository registry.cn-hangzhou.aliyuncs.com/google_containers \</span><br><span class="line">--kubernetes-version v1.28.15 \</span><br><span class="line">--service-cidr=10.96.0.0/16 \</span><br><span class="line">--pod-network-cidr=192.168.0.0/16</span><br></pre></td></tr></table></figure><ul><li><code>--apiserver-advertise-address</code> ： 集群通告地址</li><li><code>--image-repository</code> ： 由于默认拉取镜像地址k8s.gcr.io国内无法访问，这里指定阿里云镜像仓库地址</li><li><code>--kubernetes-version</code> ： K8s版本，与上面安装的一致</li><li><code>--service-cidr</code> ： 集群内部虚拟网络，Pod统一访问入口</li><li><code>--pod-network-cidr</code> ： Pod网络，与下面部署的CNI网络组件yaml中保持一致</li></ul><p><strong>创建必要文件</strong><br><strong><code>root</code></strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p <span class="variable">$HOME</span>/.kube</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">cp</span> -i /etc/kubernetes/admin.conf <span class="variable">$HOME</span>/.kube/config</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">chown</span> $(<span class="built_in">id</span> -u):$(<span class="built_in">id</span> -g) <span class="variable">$HOME</span>/.kube/config</span><br></pre></td></tr></table></figure><p><strong>添加节点</strong><br><strong><code>node节点运行</code></strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubeadm <span class="built_in">join</span> master:6443 --token w3ftmy.wi8mndgd7t6d0ai2 \</span><br><span class="line">--discovery-token-ca-cert-hash sha256:7d8c86cd8476cc6ed98962ff34353919e1b1d772d8ba08683a319041b3470643</span><br></pre></td></tr></table></figure><p><strong>注</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如果忘记或者过期可以使用以下命令重新生成</span></span><br><span class="line">kubeadm token create --print-join-command</span><br></pre></td></tr></table></figure><p><strong>查看节点信息</strong><br><strong><code>master节点运行</code></strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get nodes</span><br></pre></td></tr></table></figure><h2 id="集群部署Calico网络"><a href="#集群部署Calico网络" class="headerlink" title="集群部署Calico网络"></a>集群部署Calico网络</h2><p><strong>安装网络插件</strong><br><strong><code>master节点运行</code></strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate https://projectcalico.docs.tigera.io/archive/v3.25/manifests/calico.yaml</span><br></pre></td></tr></table></figure><p><strong>修改 calico.yaml 文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">vim calico.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在 - name: CLUSTER_TYPE 下方添加如下内容</span></span><br><span class="line">- name: CLUSTER_TYPE                 <span class="comment">##4567</span></span><br><span class="line">  value: <span class="string">&quot;k8s,bgp&quot;</span></span><br><span class="line">  <span class="comment"># 下方为新增内容</span></span><br><span class="line">- name: IP_AUTODETECTION_METHOD</span><br><span class="line">  value: <span class="string">&quot;interface=ens160&quot;</span>  <span class="comment">####master网卡名称</span></span><br></pre></td></tr></table></figure><p><strong>配置网络</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f calico.yaml</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 部署教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> k8s </tag>
            
            <tag> rocky </tag>
            
            <tag> 部署 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>arch安装教程</title>
      <link href="/2025/09/08/arch%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
      <url>/2025/09/08/arch%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="arch安装教程"><a href="#arch安装教程" class="headerlink" title="arch安装教程"></a>arch安装教程</h1><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><h3 id="下载安装镜像"><a href="#下载安装镜像" class="headerlink" title="下载安装镜像"></a>下载安装镜像</h3><ul><li><a href="https://archlinux.org/download/">archlinux官方下载页面</a></li><li><a href="https://mirrors.tuna.tsinghua.edu.cn/">清华大学开源软件镜像站</a></li><li><a href="https://mirrors.ustc.edu.cn/">中国科学技术大学开源镜像站</a><br>以上选一个镜像源下载即可</li></ul><hr><h3 id="配置启动盘"><a href="#配置启动盘" class="headerlink" title="配置启动盘"></a>配置启动盘</h3><ul><li><a href="https://www.ventoy.net/cn/doc_start.html">Ventory</a></li><li><a href="https://rufus.ie/zh/">Rufus</a><br>以上选一个下载工具下载格式化U盘作为安装U盘即可</li></ul><hr><h3 id="配置空闲分区大小"><a href="#配置空闲分区大小" class="headerlink" title="配置空闲分区大小"></a>配置空闲分区大小</h3><h4 id="双系统或多系统安装"><a href="#双系统或多系统安装" class="headerlink" title="双系统或多系统安装"></a>双系统或多系统安装</h4><h5 id="window压缩空间"><a href="#window压缩空间" class="headerlink" title="window压缩空间"></a><code>window</code>压缩空间</h5><p>右键开始菜单，点击磁盘管理，选择你要压缩的分区点击压缩卷，输入压缩空间量(MB)，作为需要分给archlinux的空闲硬盘空间大小，点击压缩，完成之后关闭</p><h5 id="diskgenius压缩空间"><a href="#diskgenius压缩空间" class="headerlink" title="diskgenius压缩空间"></a><code>diskgenius</code>压缩空间</h5><p>也可以使用<a href="https://www.diskgenius.cn/">diskgenius</a>工具或者<a href="https://www.wepe.com.cn/">PE系统盘</a>自带的diskgenius来压缩硬盘空间作为archlinux的硬盘</p><p>注：如果win硬盘采用了 <code>Bitlocker 加密</code>，在安装双系统压缩空间之前还需要<code>解密</code>一下。</p><hr><h4 id="虚拟化安装"><a href="#虚拟化安装" class="headerlink" title="虚拟化安装"></a>虚拟化安装</h4><p>创建虚拟机一直默认下一步即可，版本选择<code>其他Linux 6.x 内核 64位</code>，分配你需要的硬盘空间大小，最后设置引导为UEFI,选择镜像为archlinux镜像即可。</p><h3 id="启动archlinux安装镜像"><a href="#启动archlinux安装镜像" class="headerlink" title="启动archlinux安装镜像"></a>启动archlinux安装镜像</h3><h4 id="多系统"><a href="#多系统" class="headerlink" title="多系统"></a>多系统</h4><p>在启动安装镜像之前，需要项<code>关闭</code>BIOS设置中的<code>Secure Boot模式</code></p><blockquote><ul><li>window电脑保持<code>按住shift键</code>同时点击重启,直到进入选项界面，选择<code>疑难解答</code>，选择<code>UEFI固件设置</code>，重启以更改UEFI固件设置，重启进入BIOS界面进行修改</li><li>插入U盘并开机。在开机的时候，按下 <code>F2</code> &#x2F; <code>F8</code> &#x2F; <code>F10</code> &#x2F; <code>DEL</code> 等（取决与你的主板型号，具体请查阅你主板的相关信息）按键，进入主板的 BIOS 设置界面修改。</li></ul></blockquote><p>插入archlinux安装U盘，重启电脑，按下<code>F12</code>切换启动顺序，上下光标移动到U盘启动顺序，enter进入即可进入安装镜像</p><h4 id="虚拟机"><a href="#虚拟机" class="headerlink" title="虚拟机"></a>虚拟机</h4><p>直接启动虚拟机即可</p><h2 id="基础安装"><a href="#基础安装" class="headerlink" title="基础安装"></a>基础安装</h2><h3 id="进入安装环境"><a href="#进入安装环境" class="headerlink" title="进入安装环境"></a>进入安装环境</h3><p>多系统或者是虚拟机都是选择第一个，<code>Arch Linux install mediume</code>，在第一个选项回车进入，进入安装环境即可通过命令进行安装archlinux了。</p><p>注：<code>虚拟机</code>的话可以<strong>开启sshd服务</strong>通过<code>ssh</code>进行配置安装，相比在虚拟机内复制粘贴修改等更便捷<br>以下任性ssh工具选择其一即可</p><blockquote><ul><li><a href="https://windterm.com.cn/download">WindTerm</a></li><li><a href="https://www.xshell.com/zh/xshell/">Xshell</a></li><li><a href="https://www.chiark.greenend.org.uk/~sgtatham/putty/">PUTTY</a></li><li><a href="https://hyper.is/">Hyper</a></li><li><a href="https://mobaxterm.mobatek.net/">MobaXterm</a></li></ul></blockquote><p><strong><code>虚拟机</code>设置root密码进行ssh连接</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd</span><br></pre></td></tr></table></figure><p><strong><code>虚拟机</code>启用sshd服务</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start sshd</span><br></pre></td></tr></table></figure><p><strong>查看sshd服务是否启动成功</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status sshd</span><br></pre></td></tr></table></figure><p><strong>查看<code>虚拟机</code>ip</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip -br a s</span><br></pre></td></tr></table></figure><p>然后利用以上任意ssh连接工具输入主机ip、用户名、密码连接即可</p><hr><h3 id="禁用reflector服务"><a href="#禁用reflector服务" class="headerlink" title="禁用reflector服务"></a>禁用reflector服务</h3><p>reflector服务，它会自己更新mirrorlist,容易对某些有用的源信息造成影响，这里不需要</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop reflector.service</span><br></pre></td></tr></table></figure><p>查看服务是否被禁用，按下 q 退出结果输出</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status reflector.service</span><br></pre></td></tr></table></figure><h3 id="确认是否为UEFI模式"><a href="#确认是否为UEFI模式" class="headerlink" title="确认是否为UEFI模式"></a>确认是否为UEFI模式</h3><p>现在基本都是UEFI模式，如果是老电脑是BIOS的话在分区安装引导的时候就会有一些区别，这里默认都是UEFI模式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span> /sys/firmware/efi/efivars</span><br></pre></td></tr></table></figure><p>如果输出了一堆东西（efi 变量），则说明已在 UEFI 模式</p><h3 id="连接网络"><a href="#连接网络" class="headerlink" title="连接网络"></a>连接网络</h3><h4 id="虚拟机-1"><a href="#虚拟机-1" class="headerlink" title="虚拟机"></a><code>虚拟机</code></h4><p>只要宿主机连接了网络，<code>虚拟机</code>正常都是能连接网络的，一般默认都是NAT或者网桥模式，无需配置，一般都不会有问题</p><h4 id="多系统-1"><a href="#多系统-1" class="headerlink" title="多系统"></a><code>多系统</code></h4><p>若使用有线连接，正常来说，只要插上一个已经联网的路由器分出的网线（DHCP），直接就能联网。</p><p>若使用无线连接，则需要配置以下操作，可以使用<code>iwctl</code>工具连接wifi</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">iwctl <span class="comment"># 进入交互式命令行</span></span><br><span class="line">device list <span class="comment"># 列出无线网卡设备名，比如无线网卡看到叫 wlan0</span></span><br><span class="line">station wlan0 scan <span class="comment"># 扫描无线网卡下的网络</span></span><br><span class="line">station wlan0 get-networks <span class="comment"># 列出所有 wifi 网络</span></span><br><span class="line">station wlan0 connect wifi-name <span class="comment"># 进行连接，注意这里无法输入中文。回车后输入密码即可</span></span><br><span class="line"><span class="built_in">exit</span> <span class="comment"># 连接成功后退出</span></span><br></pre></td></tr></table></figure><p>测试网络是否联通</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping -c3 baidu.com</span><br></pre></td></tr></table></figure><h3 id="更新系统时钟"><a href="#更新系统时钟" class="headerlink" title="更新系统时钟"></a>更新系统时钟</h3><p>部分程序对系统时钟有要求</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">timedatectl set-ntp <span class="literal">true</span> <span class="comment"># 将系统时间与网络时间进行同步</span></span><br><span class="line">timedatectl status <span class="comment"># 检查服务状态</span></span><br></pre></td></tr></table></figure><h3 id="更换国内镜像源加快下载速度"><a href="#更换国内镜像源加快下载速度" class="headerlink" title="更换国内镜像源加快下载速度"></a>更换国内镜像源加快下载速度</h3><p>使用<code>nano</code>或<code>vim</code>编辑器编辑</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nano /etc/pacman.d/mirrorlist</span><br><span class="line"><span class="comment"># 或</span></span><br><span class="line">vim /etc/pacman.d/mirrorlist</span><br></pre></td></tr></table></figure><p>推荐的有</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Server = https://mirrors.ustc.edu.cn/archlinux/$repo/os/$arch # 中国科学技术大学开源镜像站</span><br><span class="line">Server = https://mirrors.tuna.tsinghua.edu.cn/archlinux/$repo/os/$arch # 清华大学开源软件镜像站</span><br><span class="line">Server = https://mirrors.aliyun.com/archlinux/$repo/os/$arch # 阿里云镜像</span><br></pre></td></tr></table></figure><p>任选以上其一或者…<code>添加</code>到<code>最上面</code>，因为最上面是会使用到的软件仓库镜像源。</p><h3 id="分区和格式化"><a href="#分区和格式化" class="headerlink" title="分区和格式化"></a>分区和格式化</h3><p>选择适合自己的分区工具，<code>cfdisk</code>、<code>parted</code>、<code>fdisk</code>、<code>gdisk</code>哪个用的顺手用那个<br>一般新手推荐<code>cfdisk</code>，图形化分区操作</p><h4 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h4><p>linux的<code>/</code>(包括<code>/home</code>等)文件系统一般为<code>ext4</code>、<code>btrfs</code>、<code>xfs</code>这三种</p><blockquote><ul><li><code>ext4</code> ：较为常用的一种，是目前绝大多数 Linux 发行版的标配，稳定性较高，无 快照和克隆功能，无法快速备份&#x2F;恢复数据，timeshift快照是rsync完整克隆</li><li><code>btrfs</code> ：适用企业级服务器，需快照克隆功能的，稳定性一般，小文件频繁写入，写时复制是双刃剑，timeshift快照是btrfs，就是快照恢复方便</li><li><code>xfs</code> ：适合服务器，性能高一点点，但不能缩小空间大小</li></ul></blockquote><p>linux的的EFI系统分区通常采用<code>FAT32</code>格式，这使得EFI能够与<code>VFAT</code>兼容，从而在启动过程中读取和执行EFI引导程序</p><blockquote><ul><li>VFAT（虚拟文件分配表）是一种文件系统，主要用于支持长文件名，兼容Windows系统。它是FAT文件系统的一个变体，广泛用于跨平台的数据存储和交换，但在Linux中不支持权限控制，存在安全性风险。</li><li>EFI（可扩展固件接口）是取代传统BIOS的固件接口，通常用于启动操作系统。EFI系统分区通常采用FAT32格式，这使得EFI能够与VFAT兼容，从而在启动过程中读取和执行EFI引导程序。</li></ul></blockquote><p>注：<code>/boot</code>存放<code>内核</code>，<code>efi</code>（<code>/efi</code>或<code>/boot/efi</code>）存放<code>引导</code>，<code>EFI目录</code>是你<code>grub-install</code>生成的引导文件，位置取决与你，一般存放位置基本就是<code>/efi/EFI</code>或者<code>/boot/efi/EFI</code>。</p><blockquote><ul><li>若将 EFI 分区直接挂载为<code>/boot</code>，则内核文件会直接存放在该 EFI 分区中（而非根文件系统的&#x2F;boot目录），系统引导也完全基于这个挂载为&#x2F;boot的 EFI 分区实现。</li><li>若将 EFI 分区挂载为<code>/efi</code>，则内核文件会正常存放在根文件系统的&#x2F;boot目录中，而挂载为&#x2F;efi的 EFI 分区仅承担引导功能。</li><li>单独划分&#x2F;boot分区（作为内核专用分区，与&#x2F;、&#x2F;home等分区分离，可使用相同文件系统），同时单独划分 EFI 分区并将其挂载到<code>/boot/efi</code>。这种方式下，内核存储与引导分区完全独立，既能避免内核文件与其他系统文件相互影响，又能最大程度降低 Windows 系统更新对 Linux 引导的干扰，稳定性最佳。</li></ul></blockquote><p><strong>swap交换空间大小分配</strong></p><table><thead><tr><th>RAM</th><th>Suspend support？</th><th>Hibernation support?</th></tr></thead><tbody><tr><td>2 GB or less</td><td>2 * RAM</td><td>3 * RAM</td></tr><tr><td>2 to 8 GB</td><td>RAM amount</td><td>2 * RAM</td></tr><tr><td>8 to 64 GB</td><td>8 GB minimum, 16 maximum</td><td>1.5 * RAM</td></tr><tr><td>64 GB or greater</td><td>8 GB minimum</td><td>Hibernation not recommended!</td></tr></tbody></table><hr><h4 id="基础分区配置"><a href="#基础分区配置" class="headerlink" title="基础分区配置"></a>基础分区配置</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sda      8:0    0    30G  0 disk </span><br><span class="line">├─sda1   8:1    0     1G  0 part </span><br><span class="line">├─sda2   8:2    0     4G  0 part </span><br><span class="line">└─sda3   8:3    0    25G  0 part </span><br></pre></td></tr></table></figure><p>这边以30G为例,&#x2F;home,&#x2F;boot就不单独分了</p><table><thead><tr><th>分区</th><th>大小</th></tr></thead><tbody><tr><td>EFI</td><td>1G</td></tr><tr><td>swap</td><td>4G</td></tr><tr><td>&#x2F;</td><td>25G</td></tr></tbody></table><p>格式化<code>EFI</code>分区</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkfs.fat -F 32 /dev/sda1</span><br></pre></td></tr></table></figure><p>格式化<code>swap</code>分区</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkswap /dev/sda2</span><br></pre></td></tr></table></figure><h5 id="配置ext4文件系统"><a href="#配置ext4文件系统" class="headerlink" title="配置ext4文件系统"></a><strong>配置ext4文件系统</strong></h5><p>格式化<code>/</code>分区</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkfs.ext4 /dev/sda3</span><br></pre></td></tr></table></figure><h5 id="配置btrfs文件系统"><a href="#配置btrfs文件系统" class="headerlink" title="配置btrfs文件系统"></a><strong>配置btrfs文件系统</strong></h5><p>格式化<code>btrfs</code>分区,并设置该分区的自定义<code>LABLE</code>为<code>myArch</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkfs.btrfs -L myArch /dev/sda3</span><br></pre></td></tr></table></figure><p>为了创建子卷，先挂载<code>btrfs</code>分区到<code>/mnt</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount -t btrfs -o compress=zstd /dev/sda3 /mnt</span><br></pre></td></tr></table></figure><p>查看挂载情况</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">df</span> -h </span><br></pre></td></tr></table></figure><p>创建btrfs子卷</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">btrfs subvolume create /mnt/@ <span class="comment"># 创建 / 目录子卷</span></span><br><span class="line">btrfs subvolume create /mnt/@home <span class="comment"># 创建 /home 目录子卷</span></span><br></pre></td></tr></table></figure><p>查看子卷情况</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">btrfs subvolume list -p /mnt</span><br></pre></td></tr></table></figure><p>子卷创建好后取消挂载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">umount /mnt</span><br></pre></td></tr></table></figure><h3 id="挂载"><a href="#挂载" class="headerlink" title="挂载"></a>挂载</h3><p>示例这里：<code>sda1</code>是<code>EFI</code>分区，<code>sda2</code>是<code>swap</code>分区，<code>sda3</code>是<code>/</code>分区</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sda      8:0    0    30G  0 disk </span><br><span class="line">├─sda1   8:1    0     1G  0 part </span><br><span class="line">├─sda2   8:2    0     4G  0 part </span><br><span class="line">└─sda3   8:3    0    25G  0 part </span><br></pre></td></tr></table></figure><h4 id="ext4文件系统挂载"><a href="#ext4文件系统挂载" class="headerlink" title="ext4文件系统挂载"></a>ext4文件系统挂载</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mount /dev/sda3 /mnt <span class="comment"># 挂载 / 目录</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p /mnt/boot <span class="comment"># 创建 /boot 目录</span></span><br><span class="line">mount /dev/sda1 /mnt/boot <span class="comment"># 挂载 /boot 目录</span></span><br><span class="line">swapon /dev/sda2 <span class="comment"># 挂载交换分区</span></span><br></pre></td></tr></table></figure><h4 id="btrfs文件系统挂载"><a href="#btrfs文件系统挂载" class="headerlink" title="btrfs文件系统挂载"></a>btrfs文件系统挂载</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mount -t btrfs -o subvol=/@,compress=zstd /dev/sda3 /mnt <span class="comment"># 挂载 / 目录</span></span><br><span class="line"><span class="built_in">mkdir</span> /mnt/home <span class="comment"># 创建 /home 目录</span></span><br><span class="line">mount -t btrfs -o subvol=/@home,compress=zstd /dev/sda3 /mnt/home <span class="comment"># 挂载 /home 目录</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p /mnt/boot <span class="comment"># 创建 /boot 目录</span></span><br><span class="line">mount /dev/sda1 /mnt/boot <span class="comment"># 挂载 /boot 目录</span></span><br><span class="line">swapon /dev/sda2 <span class="comment"># 挂载交换分区</span></span><br></pre></td></tr></table></figure><p>查看挂载和swap启用情况</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">df</span> -h <span class="comment"># 查看挂载情况</span></span><br><span class="line">swapon -s <span class="comment">#查看swap分区启用情况</span></span><br></pre></td></tr></table></figure><h3 id="安装系统"><a href="#安装系统" class="headerlink" title="安装系统"></a>安装系统</h3><h4 id="重新安装密钥"><a href="#重新安装密钥" class="headerlink" title="重新安装密钥"></a>重新安装密钥</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -S archlinux-keyring</span><br></pre></td></tr></table></figure><h4 id="用-pacstrap-脚本安装基础包"><a href="#用-pacstrap-脚本安装基础包" class="headerlink" title="用 pacstrap 脚本安装基础包"></a>用 <code>pacstrap</code> 脚本安装基础包</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如果使用btrfs文件系统，额外安装一个btrfs-progs包</span></span><br><span class="line">pacstrap /mnt base base-devel linux linux-headers linux-firmware btrfs-progs</span><br></pre></td></tr></table></figure><ul><li><input checked="" disabled="" type="checkbox"> base ：基础系统 </li><li><input checked="" disabled="" type="checkbox"> base-devel ： 工具包 </li><li><input checked="" disabled="" type="checkbox"> linux ： 标准内核</li><li><input checked="" disabled="" type="checkbox"> linux-headers ： 标准内核头文件</li><li><input disabled="" type="checkbox"> linux-lts ： 长期支持版内核</li><li><input disabled="" type="checkbox"> linux-lts-headers ： 长期支持版内核头文件</li><li><input disabled="" type="checkbox"> linux-zen ： 高性能内核，当然功耗更高</li><li><input disabled="" type="checkbox"> linux-zen ： 高性能内核头文件</li><li><input checked="" disabled="" type="checkbox"> linux-firmware ： linux固件</li><li><input checked="" disabled="" type="checkbox"> btrfs-progs ： 管理 Btrfs 文件系统的用户空间工具</li></ul><hr><h4 id="安装其他必要的功能性软件"><a href="#安装其他必要的功能性软件" class="headerlink" title="安装其他必要的功能性软件"></a>安装其他必要的功能性软件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacstrap /mnt networkmanager vim <span class="built_in">sudo</span> zsh zsh-completions grub os-prober ntfs-3g bluez bluez-utils intel-ucode openssh</span><br></pre></td></tr></table></figure><ul><li><input checked="" disabled="" type="checkbox"> networkmanager ： 网络</li><li><input checked="" disabled="" type="checkbox"> vim ： vim编辑器</li><li><input disabled="" type="checkbox"> nano ： nano编辑器</li><li><input checked="" disabled="" type="checkbox"> sudo ： 提权工具，没有这个提不了权，至少gentoo是这样的</li><li><input checked="" disabled="" type="checkbox"> zsh ： zsh作为shell，例如：&#x2F;bin&#x2F;zsh</li><li><input checked="" disabled="" type="checkbox"> zsh-completions ： zsh提供智能补全支持的工具</li><li><input disabled="" type="checkbox"> bash ： bash作为shell，例如：&#x2F;bin&#x2F;bash，不习惯<code>zsh</code>可以改为这个，zsh美化方便</li><li><input disabled="" type="checkbox"> bash-completions ： bash提供智能补全支持的工具</li><li><input checked="" disabled="" type="checkbox"> grub ： grub引导</li><li><input checked="" disabled="" type="checkbox"> os-prober ： 多系统检测</li><li><input checked="" disabled="" type="checkbox"> efibootmgr ： efi启动项管理工具，管理和编辑可用的启动目标和逻辑启动顺序。</li><li><input checked="" disabled="" type="checkbox"> ntfs-3g ： ntfs可读写</li><li><input checked="" disabled="" type="checkbox"> bluez ： 实现蓝牙协议栈的官方开源框架</li><li><input checked="" disabled="" type="checkbox"> bluez-utils ： 基于 bluez 框架开发的用户级命令行工具</li><li><input checked="" disabled="" type="checkbox"> intel-ucode ： 英特尔的cpu微码，CPU 制造商（Intel&#x2F;AMD）提供的底层指令集,我的intel</li><li><input disabled="" type="checkbox"> amd-ucode ： amd的cpu微码，CPU 制造商（Intel&#x2F;AMD）提供的底层指令集</li><li><input checked="" disabled="" type="checkbox"> openssh ： ssh远程连接服务</li></ul><h3 id="生成fstab文件"><a href="#生成fstab文件" class="headerlink" title="生成fstab文件"></a>生成fstab文件</h3><p>使用 <code>genfstab</code> 自动根据当前挂载情况生成并写入 <code>fstab</code> 文件,-U是指以UUID方式挂载配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">genfstab -U /mnt &gt; /mnt/etc/fstab</span><br></pre></td></tr></table></figure><p>检查一下配置情况</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /mnt/etc/fstab</span><br></pre></td></tr></table></figure><h3 id="chroot切换根硬盘"><a href="#chroot切换根硬盘" class="headerlink" title="chroot切换根硬盘"></a>chroot切换根硬盘</h3><p>把系统环境切换到新安装的系统</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arch-chroot /mnt</span><br></pre></td></tr></table></figure><h3 id="设置主机名和时区"><a href="#设置主机名和时区" class="headerlink" title="设置主机名和时区"></a>设置主机名和时区</h3><h4 id="配置主机名"><a href="#配置主机名" class="headerlink" title="配置主机名"></a>配置主机名</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/hostname <span class="comment"># 编辑hostname文件，输入你要起的主机名</span></span><br><span class="line"><span class="comment"># 或</span></span><br><span class="line"><span class="built_in">echo</span> myhost &gt; /etc/hostname <span class="comment"># 这里我起主机名myhost</span></span><br></pre></td></tr></table></figure><h4 id="配置host文件"><a href="#配置host文件" class="headerlink" title="配置host文件"></a>配置host文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/hosts</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加入</span></span><br><span class="line">127.0.0.1   localhost</span><br><span class="line">::1         localhost</span><br><span class="line">127.0.1.1   myhost.localdomain myhost</span><br></pre></td></tr></table></figure><h4 id="设置时区"><a href="#设置时区" class="headerlink" title="设置时区"></a>设置时区</h4><p>在 <code>/etc/localtime</code> 下用 <code>/usr/share/zoneinfo/</code> 中合适的时区创建符号链接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ln</span> -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br></pre></td></tr></table></figure><h3 id="硬件时间设置"><a href="#硬件时间设置" class="headerlink" title="硬件时间设置"></a>硬件时间设置</h3><p>将系统时间同步到硬件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hwclock --systohc</span><br></pre></td></tr></table></figure><h3 id="设置locale"><a href="#设置locale" class="headerlink" title="设置locale"></a>设置locale</h3><p><code>Locale</code> 决定了软件使用的语言、书写习惯和字符集。</p><h4 id="编辑-etc-locale-gen，去掉-en-US-UTF-8-UTF-8-以及-zh-CN-UTF-8-UTF-8-行前的注释符号（-）"><a href="#编辑-etc-locale-gen，去掉-en-US-UTF-8-UTF-8-以及-zh-CN-UTF-8-UTF-8-行前的注释符号（-）" class="headerlink" title="编辑 &#x2F;etc&#x2F;locale.gen，去掉 en_US.UTF-8 UTF-8 以及 zh_CN.UTF-8 UTF-8 行前的注释符号（#）"></a>编辑 &#x2F;etc&#x2F;locale.gen，去掉 en_US.UTF-8 UTF-8 以及 zh_CN.UTF-8 UTF-8 行前的注释符号（#）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/locale.gen</span><br></pre></td></tr></table></figure><h4 id="生成locale"><a href="#生成locale" class="headerlink" title="生成locale"></a>生成<code>locale</code></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">locale-gen</span><br></pre></td></tr></table></figure><h4 id="向-etc-locale-conf-输入内容"><a href="#向-etc-locale-conf-输入内容" class="headerlink" title="向 /etc/locale.conf 输入内容"></a>向 <code>/etc/locale.conf</code> 输入内容</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;LANG=en_US.UTF-8&#x27;</span>  &gt; /etc/locale.conf</span><br></pre></td></tr></table></figure><h3 id="设置root密码"><a href="#设置root密码" class="headerlink" title="设置root密码"></a>设置root密码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd root</span><br></pre></td></tr></table></figure><h3 id="安装引导程序"><a href="#安装引导程序" class="headerlink" title="安装引导程序"></a>安装引导程序</h3><h4 id="安装-GRUB-到-EFI-分区"><a href="#安装-GRUB-到-EFI-分区" class="headerlink" title="安装 GRUB 到 EFI 分区"></a>安装 GRUB 到 EFI 分区</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=ARCH</span><br></pre></td></tr></table></figure><p>因为这里用的是<code>/boot</code>作为EFI分区，所以–efi-directory&#x3D;<code>/boot</code>，–bootloader-id&#x3D;<code>ARCH</code>是名称，会安装到&#x2F;boot&#x2F;EFI&#x2F;<code>ARCH</code>&#x2F;grubx64.efi</p><h4 id="编辑-etc-default-grub配置"><a href="#编辑-etc-default-grub配置" class="headerlink" title="编辑&#x2F;etc&#x2F;default&#x2F;grub配置"></a>编辑&#x2F;etc&#x2F;default&#x2F;grub配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/default/grub</span><br></pre></td></tr></table></figure><ul><li>去掉 <code>GRUB_CMDLINE_LINUX_DEFAULT</code> 一行中最后的 <code>quiet</code> 参数,<code>quiet</code>指<code>隐藏详细信息</code></li><li>把 <code>loglevel</code> 的数值从 <code>3</code> 改成 <code>5</code>。这样是为了后续如果出现系统错误，方便排错</li><li>加入 <code>nowatchdog</code> 参数，看门狗是 Linux 里的监测机制，会持续监控系统运转状态，关闭可以显著提高开关机速度</li><li><code>多系统引导</code>需要在底部添加<code>GRUB_DISABLE_OS_PROBER=false</code>来启用os-prober功能</li></ul><h4 id="生成grub所需要的配置文件"><a href="#生成grub所需要的配置文件" class="headerlink" title="生成grub所需要的配置文件"></a>生成grub所需要的配置文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grub-mkconfig -o /boot/grub/grub.cfg</span><br></pre></td></tr></table></figure><h3 id="完成安装"><a href="#完成安装" class="headerlink" title="完成安装"></a>完成安装</h3><h4 id="创建普通用户"><a href="#创建普通用户" class="headerlink" title="创建普通用户"></a>创建普通用户</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd -m -G wheel 用户名</span><br></pre></td></tr></table></figure><h4 id="创建用户密码"><a href="#创建用户密码" class="headerlink" title="创建用户密码"></a>创建用户密码</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd 用户名</span><br></pre></td></tr></table></figure><h4 id="开放wheel组管理权限以赋予用户root权限"><a href="#开放wheel组管理权限以赋予用户root权限" class="headerlink" title="开放wheel组管理权限以赋予用户root权限"></a>开放wheel组管理权限以赋予用户root权限</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">visudo</span><br><span class="line"><span class="comment"># 删除%wheel ALL=(ALL:ALL) ALL前的#,启用</span></span><br></pre></td></tr></table></figure><h4 id="启用安装的服务"><a href="#启用安装的服务" class="headerlink" title="启用安装的服务"></a>启用安装的服务</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> NetworkManager</span><br><span class="line">systemctl <span class="built_in">enable</span> bluetooth</span><br><span class="line">systemctl <span class="built_in">enable</span> sshd</span><br></pre></td></tr></table></figure><h4 id="基础安装退出"><a href="#基础安装退出" class="headerlink" title="基础安装退出"></a>基础安装退出</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">exit</span> <span class="comment"># 退回安装环境</span></span><br><span class="line">umount -R /mnt <span class="comment"># 卸载新分区</span></span><br><span class="line">reboot <span class="comment"># 重启</span></span><br></pre></td></tr></table></figure><h2 id="桌面环境安装"><a href="#桌面环境安装" class="headerlink" title="桌面环境安装"></a>桌面环境安装</h2><blockquote><p><strong>显示层级关系</strong></p></blockquote><ol><li>显示管理器（gdm3&#x2F;lightDM&#x2F;sddm）</li><li>桌面环境（GNOME&#x2F;XFCE4&#x2F;KDE）</li><li>显示协议层（X11&#x2F;Wayland）</li><li>显示实现层（Xserver&#x2F;Weston（桌面合成器）+ 图形驱动）</li><li>硬件底层（GPU、显存、显示器）</li></ol><p><strong>显示管理器</strong></p><ul><li>gdm3 ： gnome系列的图形管理器</li><li>sddm ： kde系列的图像管理器</li><li>LightDM ： 显示管理器的规范解决方案，轻量级的</li></ul><h3 id="kde桌面环境安装"><a href="#kde桌面环境安装" class="headerlink" title="kde桌面环境安装"></a>kde桌面环境安装</h3><h4 id="简化安装"><a href="#简化安装" class="headerlink" title="简化安装"></a>简化安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -S plasma-desktop ssdm</span><br></pre></td></tr></table></figure><ul><li><input checked="" disabled="" type="checkbox"> plasma-desktop ： Plasma 的最小安装</li><li><input disabled="" type="checkbox"> plasma-meta ： 自动依赖并安装 <code>plasma</code> 包组 + 一系列 KDE 官方推荐的附加工具</li><li><input disabled="" type="checkbox"> plasma ： KDE Plasma 桌面环境所必需的 最基础组件，确保能启动并使用完整的桌面功能。</li><li><input checked="" disabled="" type="checkbox"> sddm ： sddm图形管理器</li></ul><h4 id="启动sddm启动管理器"><a href="#启动sddm启动管理器" class="headerlink" title="启动sddm启动管理器"></a>启动<code>sddm</code>启动管理器</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> sddm</span><br></pre></td></tr></table></figure><hr><h3 id="gnome桌面环境安装"><a href="#gnome桌面环境安装" class="headerlink" title="gnome桌面环境安装"></a>gnome桌面环境安装</h3><h4 id="简化安装-1"><a href="#简化安装-1" class="headerlink" title="简化安装"></a>简化安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -S gnome gnome-tweaks</span><br></pre></td></tr></table></figure><ul><li><input checked="" disabled="" type="checkbox"> gnome ： 包含基本的桌面环境和一些集成良好的应用</li><li><input checked="" disabled="" type="checkbox"> gnome-tweaks ： 系统设置增强工具，如果你想自定义桌面，建议下载</li><li><input disabled="" type="checkbox"> gnome-extra ：  包含其它<code>GNOME应用</code>,包含<code>gnome-tweaks</code></li></ul><h4 id="启动gdm图形管理器"><a href="#启动gdm图形管理器" class="headerlink" title="启动gdm图形管理器"></a>启动<code>gdm</code>图形管理器</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> gdm</span><br></pre></td></tr></table></figure><hr><h3 id="xfce桌面环境安装"><a href="#xfce桌面环境安装" class="headerlink" title="xfce桌面环境安装"></a>xfce桌面环境安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -S xfce4  xfce4-goodies sddm</span><br></pre></td></tr></table></figure><ul><li><input checked="" disabled="" type="checkbox"> xfce ： Xfce 桌面环境的核心组件</li><li><input checked="" disabled="" type="checkbox"> xfce4-goodies ： Xfce 桌面的扩展工具集</li><li><input checked="" disabled="" type="checkbox"> sddm ： sddm图形管理器</li></ul><h4 id="启动sddm图形管理器"><a href="#启动sddm图形管理器" class="headerlink" title="启动sddm图形管理器"></a>启动<code>sddm</code>图形管理器</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> sddm</span><br></pre></td></tr></table></figure><hr><h3 id="Cinnamon桌面环境安装"><a href="#Cinnamon桌面环境安装" class="headerlink" title="Cinnamon桌面环境安装"></a>Cinnamon桌面环境安装</h3><h4 id="简化安装-2"><a href="#简化安装-2" class="headerlink" title="简化安装"></a>简化安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -S cinnamon sddm</span><br></pre></td></tr></table></figure><ul><li><input checked="" disabled="" type="checkbox"> cinnamon ： Cinnamon 桌面环境</li><li><input checked="" disabled="" type="checkbox"> sddm ： sddm图形管理器</li></ul><h4 id="启动sddm图形管理器-1"><a href="#启动sddm图形管理器-1" class="headerlink" title="启动sddm图形管理器"></a>启动<code>sddm</code>图形管理器</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> sddm</span><br></pre></td></tr></table></figure><h2 id="常用软件安装"><a href="#常用软件安装" class="headerlink" title="常用软件安装"></a>常用软件安装</h2><h3 id="换软件源"><a href="#换软件源" class="headerlink" title="换软件源"></a>换软件源</h3><h4 id="下载国内软件源"><a href="#下载国内软件源" class="headerlink" title="下载国内软件源"></a>下载国内软件源</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L <span class="string">&#x27;https://archlinux.org/mirrorlist/?country=CN&amp;protocol=https&#x27;</span> -o /etc/pacman.d/mirrorlist</span><br></pre></td></tr></table></figure><h4 id="配置源文件，取消链接最前面的-号"><a href="#配置源文件，取消链接最前面的-号" class="headerlink" title="配置源文件，取消链接最前面的#号"></a>配置源文件，取消链接最前面的#号</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/pacman.d/mirrorlist</span><br></pre></td></tr></table></figure><h4 id="生效应用软件源"><a href="#生效应用软件源" class="headerlink" title="生效应用软件源"></a>生效应用软件源</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -Sy</span><br></pre></td></tr></table></figure><hr><h3 id="开始32位支持库与ArchLinux中文社区"><a href="#开始32位支持库与ArchLinux中文社区" class="headerlink" title="开始32位支持库与ArchLinux中文社区"></a>开始32位支持库与ArchLinux中文社区</h3><h4 id="编辑-etc-pacman-conf文件"><a href="#编辑-etc-pacman-conf文件" class="headerlink" title="编辑/etc/pacman.conf文件"></a>编辑<code>/etc/pacman.conf</code>文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/pacman.conf</span><br></pre></td></tr></table></figure><ul><li><strong>去掉 <code>[multilib]</code> 一节中两行的注释，来开启 32 位库支持</strong></li><li><strong>添加archlinuxcn源</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[archlinuxcn]</span><br><span class="line"># 清华大学开源软件镜像站</span><br><span class="line">Server = https://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/$arch </span><br><span class="line"># 中国科学技术大学开源镜像站</span><br><span class="line">Server = https://mirrors.ustc.edu.cn/archlinuxcn/$arch </span><br></pre></td></tr></table></figure><h4 id="刷新pacman数据库并更新"><a href="#刷新pacman数据库并更新" class="headerlink" title="刷新pacman数据库并更新"></a>刷新pacman数据库并更新</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S archlinuxcn-keyring <span class="comment"># cn 源中的签名</span></span><br><span class="line"><span class="built_in">sudo</span> pacman -Syy <span class="comment"># 刷新软件包</span></span><br></pre></td></tr></table></figure><h3 id="安装软件"><a href="#安装软件" class="headerlink" title="安装软件"></a>安装软件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S konsole dolphin ark sof-firmware alsa-firmware alsa-ucm-conf adobe-source-han-serif-cn-fonts firefox chromium gwenview</span><br></pre></td></tr></table></figure><ul><li><input checked="" disabled="" type="checkbox"> konsole ： 终端模拟器</li><li><input checked="" disabled="" type="checkbox"> dolphin ： 文件管理器</li><li><input checked="" disabled="" type="checkbox"> ark ： 压缩文件</li><li><input checked="" disabled="" type="checkbox"> sof-firmware ： 现代声卡的固件支持</li><li><input checked="" disabled="" type="checkbox"> alsa-firmware ： 传统声卡的固件补充</li><li><input checked="" disabled="" type="checkbox"> alsa-ucm-conf ： 音频设备的配置文件</li><li><input checked="" disabled="" type="checkbox"> adobe-source-han-serif-cn-fonts ： 开源的中文字体</li><li><input checked="" disabled="" type="checkbox"> firefox ： 火狐浏览器</li><li><input disabled="" type="checkbox"> chromium ： chromium浏览器</li><li><input checked="" disabled="" type="checkbox"> gwenview ： 图片查看器</li><li><input disabled="" type="checkbox"> steam ： steam游戏商城</li></ul><ul><li>下面这四个是确保kde桌面环境<code>Discover</code>（软件中心）可用的</li></ul><ul><li><input disabled="" type="checkbox"> packagekit ：跨桌面环境的软件包管理服务</li><li><input disabled="" type="checkbox"> packagekit-qt6 ： packagekit的Qt6 绑定库 </li><li><input disabled="" type="checkbox"> appstream  ： 软件元数据标准和处理工具</li><li><input disabled="" type="checkbox"> appstream-qt ： appstream 的 Qt 绑定库</li></ul><h3 id="安装输入法"><a href="#安装输入法" class="headerlink" title="安装输入法"></a>安装输入法</h3><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S fcitx5-im <span class="comment"># 输入法基础包组</span></span><br><span class="line"><span class="built_in">sudo</span> pacman -S fcitx5-chinese-addons <span class="comment"># 官方中文输入引擎</span></span><br><span class="line"><span class="built_in">sudo</span> pacman -S fcitx5-anthy <span class="comment"># 日文输入引擎</span></span><br><span class="line"><span class="built_in">sudo</span> pacman -S fcitx5-pinyin-moegirl <span class="comment"># 萌娘百科词库。二刺猿必备（archlinuxcn）</span></span><br><span class="line"><span class="built_in">sudo</span> pacman -S fcitx5-material-color <span class="comment"># 输入法主题</span></span><br></pre></td></tr></table></figure><h4 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/environment</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加以下内容</span></span><br><span class="line">GTK_IM_MODULE=fcitx</span><br><span class="line">QT_IM_MODULE=fcitx</span><br><span class="line">XMODIFIERS=@im=fcitx</span><br><span class="line">SDL_IM_MODULE=fcitx</span><br><span class="line">GLFW_IM_MODULE=ibus</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 安装教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> 安装 </tag>
            
            <tag> arch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>gentoo安装教程</title>
      <link href="/2025/09/07/gentoo%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
      <url>/2025/09/07/gentoo%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="gentoo安装教程"><a href="#gentoo安装教程" class="headerlink" title="gentoo安装教程"></a>gentoo安装教程</h1><h2 id="下载镜像"><a href="#下载镜像" class="headerlink" title="下载镜像"></a>下载镜像</h2><p>CD镜像可以从<a href="https://www.gentoo.org/downloads/">官方下载页</a>或任意一个<a href="https://www.gentoo.org/downloads/mirrors/">镜像站</a>下载。</p><hr><h2 id="配置启动盘"><a href="#配置启动盘" class="headerlink" title="配置启动盘"></a>配置启动盘</h2><p>使用软件配置该镜像的启动盘</p><blockquote><ul><li><a href="https://rufus.ie/zh/">rufs</a></li><li><a href="https://www.ventoy.net/cn/">ventory</a></li></ul></blockquote><p>或者在已有linux系统上dd写入U盘</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=install-amd64-minimal-&lt;发布时间戳&gt;.iso of=/dev/sdd bs=4096 status=progress &amp;&amp; <span class="built_in">sync</span></span><br></pre></td></tr></table></figure><h2 id="基础安装"><a href="#基础安装" class="headerlink" title="基础安装"></a>基础安装</h2><h3 id="网络配置"><a href="#网络配置" class="headerlink" title="网络配置"></a>网络配置</h3><p>有线的不用配置，ping的通就行，例如ping archlinux.org<br>无线的可以使用以下命令配置网络</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net-setup</span><br></pre></td></tr></table></figure><h3 id="启动SSH服务"><a href="#启动SSH服务" class="headerlink" title="启动SSH服务"></a>启动SSH服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rc-service sshd start</span><br></pre></td></tr></table></figure><p>这样可以通过ssh进行连接操作<br>开启后记得设置一下密码，默认的livecd账户都是root</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd</span><br></pre></td></tr></table></figure><p>查看ip</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip -br a s</span><br></pre></td></tr></table></figure><p>然后连接即可</p><h3 id="分区"><a href="#分区" class="headerlink" title="分区"></a>分区</h3><p>可以采用<code>cfdisk</code>或<code>parted</code>或<code>fdisk</code>又或者<code>gdisk</code><br>我这里模拟测试分的是30G</p><table><thead><tr><th align="left">分区</th><th align="left">大小</th></tr></thead><tbody><tr><td align="left">EFI</td><td align="left">1G</td></tr><tr><td align="left">swap</td><td align="left">4G</td></tr><tr><td align="left">&#x2F;</td><td align="left">25G</td></tr><tr><td align="left"><code>cfdisk</code>配置的话类型分别选择<em>EFI、Linux Swap、Linux FileSystem</em></td><td align="left"></td></tr><tr><td align="left"><code>parted</code>和<code>fdisk</code>就不用管，一个类型标签而已，不影响，只是加了方便看而已，按规定大小分区就行</td><td align="left"></td></tr></tbody></table><h3 id="格式化分区"><a href="#格式化分区" class="headerlink" title="格式化分区"></a>格式化分区</h3><p><code>btrfs</code>、<code>ext4</code>、<code>xfs</code>文件系统个人习惯</p><ul><li><code>btrfs</code>有快照功能，更方便，但读写次数多，长期容易损坏硬盘，适用想频繁快照恢复的</li><li><code>ext4</code>是非常常用的一种，稳定比较高，适用个人</li><li><code>xfs</code>性能提升了一点，但是文件系统不能缩小，适用与服务器</li></ul><p>这边我使用ext4</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sda      8:0    0    30G  0 disk </span><br><span class="line">├─sda1   8:1    0     1G  0 part </span><br><span class="line">├─sda2   8:2    0     4G  0 part </span><br><span class="line">└─sda3   8:3    0    25G  0 part </span><br></pre></td></tr></table></figure><p>比如分区用以下命令<br>格式化EFI分区</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkfs.vfat -F 32 /dev/sda1</span><br></pre></td></tr></table></figure><p>格式化swap分区</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkswap /dev/sda2</span><br></pre></td></tr></table></figure><p>格式化&#x2F;分区</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkfs.ext4 /dev/sda3</span><br></pre></td></tr></table></figure><h3 id="挂载配置分区"><a href="#挂载配置分区" class="headerlink" title="挂载配置分区"></a>挂载配置分区</h3><p>启用<code>swap</code>分区</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">swapon /dev/sda2</span><br></pre></td></tr></table></figure><p>查看swap分区启用情况</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">swapon -s</span><br></pre></td></tr></table></figure><hr><p>挂载<code>/</code>分区</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount /dev/sda3 /mnt/gentoo</span><br></pre></td></tr></table></figure><p>注：如果不存在&#x2F;mnt&#x2F;gentoo，可以采用如下命令创建</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> --parents /mnt/gentoo</span><br></pre></td></tr></table></figure><hr><p>挂载<code>EFI</code>分区(这边用的是&#x2F;efi,有三种&#x2F;efi,&#x2F;boot,&#x2F;boot &#x2F;boot&#x2F;efi）<br>这里采用的是efi安装的就先创建先</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> --parents /mnt/gentoo/efi</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount /dev/sda1 /mnt/gentoo/efi</span><br></pre></td></tr></table></figure><hr><h3 id="安装stage文件"><a href="#安装stage文件" class="headerlink" title="安装stage文件"></a>安装stage文件</h3><p>Gentoo 的 stage 文件 是用于快速初始化系统安装的 预编译基础系统镜像，其核心作用是跳过最耗时的系统核心组件编译步骤，为后续手动配置和编译完整系统打下基础。<br>根据编译程度和用途，stage 文件主要分为以下几类，对应不同的安装需求：</p><ul><li>stage3：最常用的类型，包含完整的基础系统（如内核、编译器、基础命令等），已预编译并可直接启动，适合绝大多数用户快速开始安装。</li><li>stage1&#x2F;stage2：仅包含最核心的工具链（如GCC、binutils），需从源码逐步编译出完整基础系统，仅用于追求极致自定义（如特殊架构、最小化系统）的高级用户，普通用户无需使用。</li><li>stage4：非官方标准类型，通常是第三方制作的 “半成品”系统镜像（可能包含桌面环境、驱动等），旨在进一步简化安装，但兼容性和定制性不如官方 stage3。</li></ul><p>首先移动到根</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /mnt/gentoo</span><br></pre></td></tr></table></figure><p>date查看时间是否符合</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">date</span></span><br></pre></td></tr></table></figure><p>使用ntp来纠正时钟偏差</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chronyd -q</span><br></pre></td></tr></table></figure><p>下载stage文件，例如本案例采用清华源的stage3的amd64-destop-systemd</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://mirrors.tuna.tsinghua.edu.cn/gentoo/releases/amd64/autobuilds/20250831T170358Z/stage3-amd64-desktop-systemd-20250831T170358Z.tar.xz</span><br></pre></td></tr></table></figure><p>解压一下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar xpvf stage3-*.tar.xz --xattrs-include=<span class="string">&#x27;*.*&#x27;</span> --numeric-owner -C /mnt/gentoo</span><br></pre></td></tr></table></figure><h3 id="配置编译选项"><a href="#配置编译选项" class="headerlink" title="配置编译选项"></a>配置编译选项</h3><p>vim 编辑etc&#x2F;portage&#x2F;make.conf，不会用可以用nano</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim etc/portage/make.conf</span><br></pre></td></tr></table></figure><p>添加如下配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">MAKEOPTS=&quot;-j12&quot;</span><br><span class="line">GENTOO_MIRRORS=&quot;https://mirrors.tuna.tsinghua.edu.cn/gentoo/&quot;</span><br><span class="line">USE=&quot;systemd -elogind alas pipewire icu policykit udisks archive udev -gtk -gnome qt6 qt5 gtk4 gtk3 gtk2 kde alsa X xorg wayland opengl vulkan fcitx dist-kernel dbus openssl ffmpeg&quot;</span><br><span class="line">VIDEO_CARDS=&quot;amdgpu radeonsi&quot;</span><br><span class="line">ACCEPT_LICENSE=&quot;*&quot;</span><br><span class="line">LINGUAS=&quot;en en_US zh zh_CN&quot;</span><br><span class="line">L10N=&quot;en en-US zh zh-Hans zh-Hans-CN zh-CN&quot;</span><br><span class="line">GRUB_PLATFORMS=&quot;efi-64&quot;</span><br></pre></td></tr></table></figure><p>注意：<br><strong>MAKEOPTS</strong>：编译的线程数，最好取你的CPU逻辑核心数和已内存为单位的&#x2F;2之间选一个小的<br>我这里8G内存，4核2线程也就是8线程。保守的话就3</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MAKEOPTS=&quot;-j4&quot;</span><br></pre></td></tr></table></figure><p><strong>GENTOO_MIRRORS</strong>：设置为tuna清华源</p><p><strong>USE</strong>：</p><ul><li>systemd 因为这里用的stage守护进程选的是systemd，用着优化更好,-elogind避免与systemd冲突</li><li>pipewire是音频守护进程</li><li>policykit事关权限要加</li><li>archive文件管理器</li><li>-gtk -gnome kde意思是不用gnome桌面环境，用kde。用gnome的话就是-gtk gnome -kde</li><li>X xorg图形化显示协议，新的一种是wayland，但兼容性没有xorg好，都开</li><li>vulkan 对显卡的一些优化</li><li>fcitx输入法</li><li>openssl可以选依赖</li><li>ffmpeg对音频进行优化</li></ul><p><strong>VIDEO_CARDS</strong>：<br>这个可以在gentoo wiki安装选择适合自己的</p><blockquote><p>gentoo wiki VIDEO_CARDS:<br><a href="https://wiki.gentoo.org/wiki/Handbook:AMD64/Full/Installation/en#VIDEO_CARDS">https://wiki.gentoo.org/wiki/Handbook:AMD64/Full/Installation/en#VIDEO_CARDS</a></p></blockquote><p>这边我intel，我改为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">VIDEO_CARDS=&quot;intel&quot;</span><br></pre></td></tr></table></figure><p>ACCEPT_LICENSE：*，所有的证书都允许，省事</p><p>GRUB_PLATFORMS：grub boot lodaer引导的设置</p><hr><p>可以修改添加一下COMMON_FLAGS，对cpu进行一下优化,O2是比较保守的优化，激进一点就O3，-pipe指用管道进行编译，会加快速度，但是对内存有要求</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">COMMON_FLAGS=&quot;-march=native -O2 -pipe&quot;</span><br></pre></td></tr></table></figure><p>加上-finline-functions</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">COMMON_FLAGS=&quot;-march=native -O2 -pipe -finline-functions&quot;</span><br></pre></td></tr></table></figure><p>要加-fgraphito-identity如下参数，还要新建编辑一个文件etc&#x2F;portage&#x2F;package.use&#x2F;gcc,vim编辑添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sys-devel/gcc graphite</span><br></pre></td></tr></table></figure><p>这里我就不加了，比较慢</p><p>可以加-fno-math-errno -fno-trapping-math，对浮点进行优化</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">COMMON_FLAGS=&quot;-march=native -O2 -pipe -finline-functions -fno-math-errno -fno-trapping-math&quot;</span><br></pre></td></tr></table></figure><h3 id="Chrooting"><a href="#Chrooting" class="headerlink" title="Chrooting"></a>Chrooting</h3><h4 id="复制DNS信息"><a href="#复制DNS信息" class="headerlink" title="复制DNS信息"></a>复制DNS信息</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> --dereference /etc/resolv.conf /mnt/gentoo/etc/</span><br></pre></td></tr></table></figure><p>可以arch脚本移动到root</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arch-chroot /mnt/gentoo</span><br></pre></td></tr></table></figure><p>有些发行版会将&#x2F;dev&#x2F;shm链接到 &#x2F;run&#x2F;shm&#x2F;，官方的这个min不用，如果是链接这种情况就得配置如下操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span> -L /dev/shm &amp;&amp; <span class="built_in">rm</span> /dev/shm &amp;&amp; <span class="built_in">mkdir</span> /dev/shm</span><br><span class="line">mount --types tmpfs --options nosuid,nodev,noexec shm /dev/shm</span><br><span class="line"><span class="built_in">chmod</span> 1777 /dev/shm /run/shm</span><br></pre></td></tr></table></figure><p>进入新环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chroot</span> /mnt/gentoo /bin/bash</span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line"><span class="built_in">export</span> PS1=<span class="string">&quot;(chroot) <span class="variable">$&#123;PS1&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure><h3 id="配置Portage"><a href="#配置Portage" class="headerlink" title="配置Portage"></a>配置Portage</h3><p>更新一下webrsync，从网络安装 Gentoo ebuild 仓库快照</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">emerge-webrsync</span><br></pre></td></tr></table></figure><p>阅读新闻条目</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">eselect news list</span><br><span class="line">eselect news <span class="built_in">read</span></span><br></pre></td></tr></table></figure><h3 id="选择正确的配置文件"><a href="#选择正确的配置文件" class="headerlink" title="选择正确的配置文件"></a>选择正确的配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eselect profile list</span><br></pre></td></tr></table></figure><p>这里的默认选择,适合hyperland</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[4]   default/linux/amd64/23.0/desktop/systemd (stable) *</span><br></pre></td></tr></table></figure><p>这边我改选为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eselect profile <span class="built_in">set</span> 7</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[7]   default/linux/amd64/23.0/desktop/plasma (stable) *</span><br></pre></td></tr></table></figure><h3 id="更新-world集合"><a href="#更新-world集合" class="headerlink" title="更新@world集合"></a>更新@world集合</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">emerge --ask --verbose --update --deep --changed-use @world</span><br></pre></td></tr></table></figure><p><strong>报错了</strong><br><strong>解决media-video&#x2F;pipewire 包存在未满足的依赖约束</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 新建 pipewire 配置文件</span><br><span class="line">nano /etc/portage/package.use/pipewire</span><br><span class="line"></span><br><span class="line"># 为 pipewire 启用 extra USE 标志，匹配 ffmpeg 依赖</span><br><span class="line">media-video/pipewire extra</span><br></pre></td></tr></table></figure><p><strong>解决软件包循环依赖问题，核心是 ffmpeg、libsdl2、pipewire 三者之间形成了依赖闭环</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 新建 sdl2 配置文件</span><br><span class="line">nano /etc/portage/package.use/sdl2</span><br><span class="line"></span><br><span class="line"># 临时关闭 libsdl2 的 pipewire 依赖，解决循环依赖问题</span><br><span class="line">media-libs/libsdl2 -pipewire</span><br></pre></td></tr></table></figure><p><strong>重新执行更新命令，优先安装循环中的包</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">emerge --ask --verbose --update --deep --changed-use @world</span><br></pre></td></tr></table></figure><p><strong>安装完成后恢复 libsdl2 的 pipewire 支持</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编辑 sdl2 配置文件，删除或注释掉那一行</span></span><br><span class="line">nano /etc/portage/package.use/sdl2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存退出后，重新更新一次 libsdl2 即可</span></span><br><span class="line">emerge --ask --verbose media-libs/libsdl2</span><br></pre></td></tr></table></figure><h3 id="删除没用的包"><a href="#删除没用的包" class="headerlink" title="删除没用的包"></a>删除没用的包</h3><p>查看输出，是否确定删除</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">emerge --ask --pretend --depclean</span><br></pre></td></tr></table></figure><p>happy，那就删除</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">emerge --ask --depclean</span><br></pre></td></tr></table></figure><h3 id="设置时区"><a href="#设置时区" class="headerlink" title="设置时区"></a>设置时区</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ln</span> -sf ./usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br></pre></td></tr></table></figure><h3 id="生成时区设置"><a href="#生成时区设置" class="headerlink" title="生成时区设置"></a>生成时区设置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">nano /etc/locale.gen</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加上</span></span><br><span class="line">en_US.UTF-8 UTF-8</span><br><span class="line">zh_CN.UTF-8 UTF-8</span><br></pre></td></tr></table></figure><p>运行locale-gen命令，生成&#x2F;etc&#x2F;locale.gen文件中的所有指定的地区</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">locale-gen</span><br></pre></td></tr></table></figure><p>现在当前配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eselect locale list</span><br></pre></td></tr></table></figure><p>更改配置,我这里的4是en_US</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eselect locale <span class="built_in">set</span> 4</span><br></pre></td></tr></table></figure><p><strong>现在重新加载环境</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">env-update &amp;&amp; <span class="built_in">source</span> /etc/profile &amp;&amp; <span class="built_in">export</span> PS1=<span class="string">&quot;(chroot) <span class="variable">$&#123;PS1&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure><h3 id="安装内核"><a href="#安装内核" class="headerlink" title="安装内核"></a>安装内核</h3><p>编辑&#x2F;etc&#x2F;portage&#x2F;package.use&#x2F;installkernel</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nano /etc/portage/package.use/installkernel</span><br><span class="line">sys-kernel/installkernel grub</span><br></pre></td></tr></table></figure><p><strong>更新配置文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dispatch-conf</span><br></pre></td></tr></table></figure><p><strong>安装</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">emerge --ask sys-kernel/gentoo-kernel</span><br></pre></td></tr></table></figure><h3 id="安装固件和微码"><a href="#安装固件和微码" class="headerlink" title="安装固件和微码"></a>安装固件和微码</h3><p>安装Linux Firmware</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">emerge --ask sys-kernel/linux-firmware</span><br></pre></td></tr></table></figure><p>安装SOF Firmware</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">emerge --ask sys-firmware/sof-firmware</span><br></pre></td></tr></table></figure><p>安装intel的微码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">emerge -av sys-firmware/intel-microcode</span><br></pre></td></tr></table></figure><h3 id="配置fstab文件"><a href="#配置fstab文件" class="headerlink" title="配置fstab文件"></a>配置fstab文件</h3><p>便捷的方法：安装genfstab工具自动生成</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">emerge -av sys-fs/genfstab</span><br></pre></td></tr></table></figure><p>生成分区信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">genfstab /</span><br></pre></td></tr></table></figure><p>以UUID的方式挂载生成分区信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">genfstab -U /</span><br></pre></td></tr></table></figure><p>输出到fstab</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">genfstab -U / &gt; /etc/fstab</span><br></pre></td></tr></table></figure><h3 id="配置主机名"><a href="#配置主机名" class="headerlink" title="配置主机名"></a>配置主机名</h3><p>例如galaxy</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> galaxy &gt; /etc/hostname</span><br></pre></td></tr></table></figure><h3 id="配置dhcp"><a href="#配置dhcp" class="headerlink" title="配置dhcp"></a>配置dhcp</h3><p>安装dhcp包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">emerge --ask net-misc/dhcpcd</span><br></pre></td></tr></table></figure><p>确保systemd中启用服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> dhcpcd</span><br></pre></td></tr></table></figure><h3 id="设置root密码"><a href="#设置root密码" class="headerlink" title="设置root密码"></a>设置root密码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd</span><br></pre></td></tr></table></figure><h3 id="启用sshd"><a href="#启用sshd" class="headerlink" title="启用sshd"></a>启用sshd</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> sshd</span><br></pre></td></tr></table></figure><h3 id="Shell补全安装和启用"><a href="#Shell补全安装和启用" class="headerlink" title="Shell补全安装和启用"></a>Shell补全安装和启用</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">emerge --ask app-shells/bash-completion</span><br></pre></td></tr></table></figure><h3 id="安装时间同步包"><a href="#安装时间同步包" class="headerlink" title="安装时间同步包"></a>安装时间同步包</h3><p>安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">emerge --ask net-misc/chrony</span><br></pre></td></tr></table></figure><p>启用时间同步服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> chronyd.service</span><br></pre></td></tr></table></figure><h3 id="文件系统工具"><a href="#文件系统工具" class="headerlink" title="文件系统工具"></a>文件系统工具</h3><p>ext4工具下载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">emerge -av sys-fs/e2fsprogs</span><br></pre></td></tr></table></figure><p>XFS工具下载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">emerge -av sys-fs/xfsprogs</span><br></pre></td></tr></table></figure><p>btrfs工具下载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">emerge -av sys-fs/btrfs-progs</span><br></pre></td></tr></table></figure><p>VFAT工具下载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">emerge --av sys-fs/dosfstools</span><br></pre></td></tr></table></figure><p>建议安装 sys-block&#x2F;io-scheduler-udev-rules 以确保与例如 nvme 设备等正确的调度器行为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">emerge --ask sys-block/io-scheduler-udev-rules</span><br></pre></td></tr></table></figure><h3 id="grub工具安装"><a href="#grub工具安装" class="headerlink" title="grub工具安装"></a>grub工具安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">emerge --ask --verbose sys-boot/grub</span><br></pre></td></tr></table></figure><p>如果要多系统检测引导的话，需要安装我们熟知os-prober</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">emerge -av os-prober</span><br></pre></td></tr></table></figure><h3 id="安装grub引导器"><a href="#安装grub引导器" class="headerlink" title="安装grub引导器"></a>安装grub引导器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grub-install --target=x86_64-efi --efi-directory=/efi --bootloader-id=gentoo</span><br></pre></td></tr></table></figure><h3 id="生成配置grub配置文件"><a href="#生成配置grub配置文件" class="headerlink" title="生成配置grub配置文件"></a>生成配置grub配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grub-mkconfig -o /boot/grub/grub.cfg</span><br></pre></td></tr></table></figure><p>重启之前，可以创建一个用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd -m -G <span class="built_in">users</span>,wheel,audio -s /bin/bash 用户名</span><br></pre></td></tr></table></figure><p>设置一下密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd 用户名</span><br></pre></td></tr></table></figure><p>给wheel组开放管理员权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">visudo</span><br><span class="line"></span><br><span class="line">%wheel ALL=(ALL:ALL) ALL</span><br></pre></td></tr></table></figure><h3 id="安装sudo工具"><a href="#安装sudo工具" class="headerlink" title="安装sudo工具"></a>安装sudo工具</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">emerge --ask app-admin/sudo</span><br></pre></td></tr></table></figure><h3 id="删除stage文件-可选"><a href="#删除stage文件-可选" class="headerlink" title="删除stage文件(可选)"></a>删除stage文件(可选)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rm</span> /stage3-*.tar.*</span><br></pre></td></tr></table></figure><hr><h2 id="安装图形化界面"><a href="#安装图形化界面" class="headerlink" title="安装图形化界面"></a>安装图形化界面</h2><h3 id="安装完整的kde桌面"><a href="#安装完整的kde桌面" class="headerlink" title="安装完整的kde桌面"></a>安装完整的kde桌面</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装完整 KDE 桌面（包含 Plasma、常用工具）</span></span><br><span class="line">emerge -av kde-plasma/plasma-meta</span><br></pre></td></tr></table></figure><h3 id="安装Xorg"><a href="#安装Xorg" class="headerlink" title="安装Xorg"></a>安装Xorg</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">安装 Xorg 服务器（图形化基础）</span><br><span class="line">emerge -av x11-base/xorg-server</span><br></pre></td></tr></table></figure><h3 id="安装sddm"><a href="#安装sddm" class="headerlink" title="安装sddm"></a>安装sddm</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">安装 SDDM（KDE 官方显示管理器，systemd 兼容）</span><br><span class="line">emerge -av sys-apps/sddm</span><br></pre></td></tr></table></figure><h3 id="设置sddm为默认配置"><a href="#设置sddm为默认配置" class="headerlink" title="设置sddm为默认配置"></a>设置sddm为默认配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置 SDDM 为默认显示管理器（生成 systemd 配置）</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;DISPLAYMANAGER=sddm&quot;</span> &gt; /etc/conf.d/display-manager</span><br></pre></td></tr></table></figure><h3 id="启用sddm服务"><a href="#启用sddm服务" class="headerlink" title="启用sddm服务"></a>启用sddm服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启用并启动 SDDM 服务（开机自启 + 立即生效）</span></span><br><span class="line">systemctl <span class="built_in">enable</span> --now sddm.service</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 安装教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> gentoo </tag>
            
            <tag> 安装 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>fedora虚拟化</title>
      <link href="/2025/09/05/fedora%E8%99%9A%E6%8B%9F%E5%8C%96/"/>
      <url>/2025/09/05/fedora%E8%99%9A%E6%8B%9F%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<h1 id="fedora虚拟化"><a href="#fedora虚拟化" class="headerlink" title="fedora虚拟化"></a>fedora虚拟化</h1><h2 id="系统要求"><a href="#系统要求" class="headerlink" title="系统要求"></a>系统要求</h2><p>KVM 要求 CPU 有虚拟化扩展功能，近些年生产的很多 CPU 都具有该类扩展功能。这些扩展功能被称为 Intel VT 或 AMD-V 。使用如下命令检查您的 CPU 是否支持虚拟化：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">egrep <span class="string">&#x27;^flags.*(vmx|svm)&#x27;</span> /proc/cpuinfo </span><br></pre></td></tr></table></figure><p>如果没有任何输出，则说明您的系统不支持相关扩展功能。您仍然可以使用 QEMU&#x2F;KVM ，但是虚拟将只能使用软件虚拟化（想当慢）。</p><h2 id="安装虚拟化软件包"><a href="#安装虚拟化软件包" class="headerlink" title="安装虚拟化软件包"></a>安装虚拟化软件包</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su -c <span class="string">&quot;yum install @virtualization&quot;</span></span><br></pre></td></tr></table></figure><p>该命令将安装 <code>qemu-kvm</code>、<code>python-virtinst</code>、<code>qemu</code>、<code>virt-manager</code>、<code>virt-viewer</code> 以及所有需要的依赖软件包。  </p><blockquote><p>su -c “systemctl start libvirtd”</p></blockquote><p>确认所有 kvm 内核模块已正常加载：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ lsmod | grep kvm</span><br><span class="line">kvm_intel             471040  0</span><br><span class="line">kvm                  1486848  1 kvm_intel</span><br><span class="line">irqbypass              12288  1 kvm</span><br></pre></td></tr></table></figure><p>如果该命令没有列出 kvm_intel 或 kvm_amd, 则说明 KVM 没有正常配置。确保系统正常使用 KVM 以解决问题。<br>例如：<br>重载内核module，if you know,you know.<br><strong>卸载kvm模块</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 对于Intel处理器</span></span><br><span class="line"><span class="built_in">sudo</span> modprobe -r kvm_intel kvm </span><br><span class="line"></span><br><span class="line"><span class="comment"># 对于AMD处理器</span></span><br><span class="line"><span class="built_in">sudo</span> modprobe -r kvm_amd kvm</span><br></pre></td></tr></table></figure><p><strong>重新加载 KVM 模块</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> modprobe kvm</span><br><span class="line"><span class="built_in">sudo</span> modprobe kvm_intel    <span class="comment"># 对于Intel处理器</span></span><br><span class="line"><span class="comment"># 或</span></span><br><span class="line"><span class="built_in">sudo</span> modprobe kvm_amd      <span class="comment"># 对于AMD处理器</span></span><br></pre></td></tr></table></figure><p><strong>如出现错误自行查看内核信息</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">demsg |grep -i kvm</span><br><span class="line">jounalctl -k |grep -i kvm</span><br></pre></td></tr></table></figure><p>如果需要嵌套虚拟化，载入kvm虚拟化module时可以加个参数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 对于Intel处理器</span></span><br><span class="line"><span class="built_in">sudo</span> modprobe kvm_intel nested=1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 对于AMD处理器</span></span><br><span class="line"><span class="built_in">sudo</span> modprobe kvm_amd nested=1</span><br></pre></td></tr></table></figure><p>如果需要永久生效，用一下命令创建修改module载入的默认参数的配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 对于Intel处理器</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;options kvm_intel nested=1&quot;</span> | <span class="built_in">sudo</span> <span class="built_in">tee</span> /etc/modprobe.d/kvm.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 对于AMD处理器</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;options kvm_amd nested=1&quot;</span> | <span class="built_in">sudo</span> <span class="built_in">tee</span> /etc/modprobe.d/kvm.conf</span><br></pre></td></tr></table></figure><h2 id="网络支持"><a href="#网络支持" class="headerlink" title="网络支持"></a>网络支持</h2><p>配置默认的NAT，查看是否存在default<br>Libvirt 是 Linux 上管理 KVM&#x2F;QEMU 等虚拟机的通用工具。为了让虚拟机能上网，它默认自带了一个基于 NAT（网络地址转换）的虚拟网络，名字就叫 “default”。能让你的虚拟机通过宿主机（运行虚拟机的电脑）的网络上网，但外界无法直接访问虚拟</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> virsh net-list --all</span><br></pre></td></tr></table></figure><p>如果不存在，使用默认的XML重载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 重新加载默认网络的XML配置文件（系统自带模板） /usr/share/libvirt/networks/default.xml</span></span><br><span class="line"><span class="built_in">sudo</span> virsh net-define /usr/share/libvirt/networks/default.xml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 设置为开机自动启动</span></span><br><span class="line"><span class="built_in">sudo</span> virsh net-autostart default</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 立即启动这个虚拟网络</span></span><br><span class="line"><span class="built_in">sudo</span> virsh net-start default</span><br></pre></td></tr></table></figure><h2 id="安装创建guest"><a href="#安装创建guest" class="headerlink" title="安装创建guest"></a>安装创建guest</h2><p><strong>直接virt-manager图形化安装</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su -c <span class="string">&quot;virt-manager&quot;</span></span><br></pre></td></tr></table></figure><p><strong>命令行安装</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su -c <span class="string">&quot;/usr/bin/virt-install --prompt&quot;</span></span><br></pre></td></tr></table></figure><h2 id="虚拟机管理"><a href="#虚拟机管理" class="headerlink" title="虚拟机管理"></a>虚拟机管理</h2><h3 id="启动虚拟机"><a href="#启动虚拟机" class="headerlink" title="启动虚拟机"></a>启动虚拟机</h3><p>例如启动我的rhel9.0</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> virsh start rhel9.0</span><br></pre></td></tr></table></figure><h3 id="显示已运行的虚拟机"><a href="#显示已运行的虚拟机" class="headerlink" title="显示已运行的虚拟机"></a>显示已运行的虚拟机</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> virsh list</span><br></pre></td></tr></table></figure><h3 id="显示所有包括未运行的虚拟机"><a href="#显示所有包括未运行的虚拟机" class="headerlink" title="显示所有包括未运行的虚拟机"></a>显示所有包括未运行的虚拟机</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> virsh list --all</span><br></pre></td></tr></table></figure><h3 id="关闭虚拟机"><a href="#关闭虚拟机" class="headerlink" title="关闭虚拟机"></a>关闭虚拟机</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> virsh shotdown rhel9.0</span><br></pre></td></tr></table></figure><h3 id="强制关闭虚拟机"><a href="#强制关闭虚拟机" class="headerlink" title="强制关闭虚拟机"></a>强制关闭虚拟机</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> virsh destroy rhel9.0</span><br></pre></td></tr></table></figure><h3 id="将机器快照保存到文件"><a href="#将机器快照保存到文件" class="headerlink" title="将机器快照保存到文件"></a>将机器快照保存到文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> virsh save rhel9.0 my-snapshot-file </span><br></pre></td></tr></table></figure><h3 id="导出机器的xml配置文件输出到终端"><a href="#导出机器的xml配置文件输出到终端" class="headerlink" title="导出机器的xml配置文件输出到终端"></a>导出机器的xml配置文件输出到终端</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">virsh dumpxml rhel9.0 </span><br></pre></td></tr></table></figure><h3 id="拍摄管理快照"><a href="#拍摄管理快照" class="headerlink" title="拍摄管理快照"></a>拍摄管理快照</h3><p>拍摄快照</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> virsh snapshot-create rhel9.0</span><br></pre></td></tr></table></figure><p>拍摄快照名为test</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> virsh snapshot-create-as <span class="built_in">test</span> rhel9.0</span><br></pre></td></tr></table></figure><p>显示虚拟机已有快照</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> virsh snapshot-list rhel9.0</span><br></pre></td></tr></table></figure><p>删除名为test快照</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> virsh snapshot-delete rhel9.0 <span class="built_in">test</span></span><br></pre></td></tr></table></figure><p>恢复到指定快照</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> virsh snapshot-revert rhel9.0 1757256035</span><br></pre></td></tr></table></figure><h3 id="查看虚拟机ip信息"><a href="#查看虚拟机ip信息" class="headerlink" title="查看虚拟机ip信息"></a>查看虚拟机ip信息</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> virsh domifaddr rhel9.0</span><br></pre></td></tr></table></figure><h3 id="console-连接虚拟机"><a href="#console-连接虚拟机" class="headerlink" title="console 连接虚拟机"></a>console 连接虚拟机</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> virsh console rhel9.0</span><br></pre></td></tr></table></figure><p>按回车如果没反应，则系统没启用该功能，我这边就不配置了，需要的可以自行上网配置</p>]]></content>
      
      
      <categories>
          
          <category> 部署教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> fedora </tag>
            
            <tag> 虚拟化 </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>rustdesk中继服务器部署</title>
      <link href="/2025/08/29/rustdesk%E4%B8%AD%E7%BB%A7%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%83%A8%E7%BD%B2/"/>
      <url>/2025/08/29/rustdesk%E4%B8%AD%E7%BB%A7%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<h1 id="部署rustdesk中继服务器"><a href="#部署rustdesk中继服务器" class="headerlink" title="部署rustdesk中继服务器"></a>部署rustdesk中继服务器</h1><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><h3 id="1-拥有一台Linux云服务器"><a href="#1-拥有一台Linux云服务器" class="headerlink" title="1.拥有一台Linux云服务器"></a>1.拥有一台Linux云服务器</h3><blockquote><p>推荐云服务系统镜像为ubuntu24.04</p></blockquote><p>服务器控制台安全组（防火墙）放行如下端口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">TCP：21114-21119</span><br><span class="line">UDP：21116</span><br></pre></td></tr></table></figure><hr><h3 id="2-拥有一个ssh工具，用来连接云服务器"><a href="#2-拥有一个ssh工具，用来连接云服务器" class="headerlink" title="2.拥有一个ssh工具，用来连接云服务器"></a>2.拥有一个ssh工具，用来连接云服务器</h3><p>以下任性其一即可</p><blockquote><ul><li><a href="https://windterm.com.cn/download">WindTerm</a></li><li><a href="https://www.xshell.com/zh/xshell/">Xshell</a></li><li><a href="https://www.chiark.greenend.org.uk/~sgtatham/putty/">PUTTY</a></li><li><a href="https://hyper.is/">Hyper</a></li><li><a href="https://mobaxterm.mobatek.net/">MobaXterm</a></li></ul></blockquote><hr><h3 id="3-安装宝塔或者1panel"><a href="#3-安装宝塔或者1panel" class="headerlink" title="3.安装宝塔或者1panel"></a>3.安装<code>宝塔</code>或者<code>1panel</code></h3><p>利用上述已有的ssh工具连接到云服务器，用户为root，密码购买云服务器为自定义的</p><h4 id="安装宝塔"><a href="#安装宝塔" class="headerlink" title="安装宝塔"></a>安装<code>宝塔</code></h4><p>Centos&#x2F;Redhat安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh</span><br></pre></td></tr></table></figure><p>Ubuntu&#x2F;Deepin安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; <span class="built_in">sudo</span> bash install.sh</span><br></pre></td></tr></table></figure><p>Debian安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; bash install.sh</span><br></pre></td></tr></table></figure><p>Fedora安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; bash install.sh </span><br></pre></td></tr></table></figure><p><strong>记录面板账户登录信息，服务器控制台安全组(防火墙)开放宝塔端口</strong></p><hr><h4 id="安装1Panel"><a href="#安装1Panel" class="headerlink" title="安装1Panel"></a>安装<code>1Panel</code></h4><p>Centos&#x2F;Redhat安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -sSL https://resource.fit2cloud.com/1panel/package/quick_start.sh -o quick_start.sh &amp;&amp; sh quick_start.sh</span><br></pre></td></tr></table></figure><p>Ubuntu安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -sSL https://resource.fit2cloud.com/1panel/package/quick_start.sh -o quick_start.sh &amp;&amp; <span class="built_in">sudo</span> bash quick_start.sh</span><br></pre></td></tr></table></figure><p>Debain安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -sSL https://resource.fit2cloud.com/1panel/package/quick_start.sh -o quick_start.sh &amp;&amp; bash quick_start.sh</span><br></pre></td></tr></table></figure><p><strong>按提示自定义配置默认端口，用户、密码等，记录最终1panel信息，服务器控制台安全组(防火墙)开放指定1Panel端口</strong></p><hr><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><h3 id="Docker容器编排服务器及API"><a href="#Docker容器编排服务器及API" class="headerlink" title="Docker容器编排服务器及API"></a>Docker容器编排服务器及API</h3><h4 id="1-访问宝塔-1Panel管理面板"><a href="#1-访问宝塔-1Panel管理面板" class="headerlink" title="1.访问宝塔&#x2F;1Panel管理面板"></a>1.访问<code>宝塔</code>&#x2F;<code>1Panel</code>管理面板</h4><p>打开浏览器访问</p><blockquote><p>http:&#x2F;&#x2F;&lt;云服务器公网IP&#x2F;IP&gt;:&lt;宝塔&#x2F;1Panel开放端口</p></blockquote><h2 id="输入宝塔-1Panel面板账户登录信息登录"><a href="#输入宝塔-1Panel面板账户登录信息登录" class="headerlink" title="输入宝塔&#x2F;1Panel面板账户登录信息登录"></a>输入<code>宝塔</code>&#x2F;<code>1Panel</code>面板账户登录信息登录</h2><h4 id="2-创建docker容器"><a href="#2-创建docker容器" class="headerlink" title="2.创建docker容器"></a>2.创建docker容器</h4><p>如果<code>宝塔</code>没下载docker，面板上点击下载即可</p><ul><li>面板导航栏点击容器，点击编排</li><li>文件睡意取名，yml&#x2F;yaml都可以</li><li>复制黏贴以下代码，<strong>修改对应IP及key信息</strong>(自定义中继服务器的key(rustdesk要填的那个key)</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">rustdesk-net:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">hbbs:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">hbbs</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">21115</span><span class="string">:21115</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">21116</span><span class="string">:21116</span> <span class="comment"># 自定义 hbbs 映射端口</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">21116</span><span class="string">:21116/udp</span> <span class="comment"># 自定义 hbbs 映射端口</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">21118</span><span class="string">:21118</span> <span class="comment"># web client</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">rustdesk/rustdesk-server</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">hbbs</span> <span class="string">-r</span> <span class="string">&lt;你的服务器IP/域名&gt;:21117</span> <span class="string">-k</span> <span class="string">&lt;自定义key&gt;</span> <span class="comment"># 填入个人域名或 IP + hbbr 暴露端口 并输入自定key</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/data/rustdesk/hbbs:/root</span> <span class="comment"># 自定义挂载目录</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">rustdesk-net</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">hbbr</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">deploy:</span></span><br><span class="line">      <span class="attr">resources:</span></span><br><span class="line">        <span class="attr">limits:</span></span><br><span class="line">          <span class="attr">memory:</span> <span class="string">64M</span></span><br><span class="line">  <span class="attr">hbbr:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">hbbr</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">21117</span><span class="string">:21117</span> <span class="comment"># 自定义 hbbr 映射端口</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">21119</span><span class="string">:21119</span> <span class="comment"># web client</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">rustdesk/rustdesk-server</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">hbbr</span> <span class="string">-k</span> <span class="string">&lt;自定义key&gt;</span> <span class="comment">#输入自定义key</span></span><br><span class="line">    <span class="comment">#command: hbbr</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/data/rustdesk/hbbr:/root</span> <span class="comment"># 自定义挂载目录</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">rustdesk-net</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">deploy:</span></span><br><span class="line">      <span class="attr">resources:</span></span><br><span class="line">        <span class="attr">limits:</span></span><br><span class="line">          <span class="attr">memory:</span> <span class="string">64M</span></span><br><span class="line">  <span class="attr">rustdesk-api:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">rustdesk-api</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">TZ=Asia/Shanghai</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">RUSTDESK_API_RUSTDESK_ID_SERVER=&lt;你的服务器IP/域名&gt;:21116</span> <span class="comment">#输入你的服务器IP/域名</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">RUSTDESK_API_RUSTDESK_RELAY_SERVER=&lt;你的服务器IP/域名&gt;:21117</span> <span class="comment">#输入你的服务器IP/域名</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">RUSTDESK_API_RUSTDESK_API_SERVER=http://&lt;你的服务器IP/域名&gt;:21114</span> <span class="comment">#输入你的服务器IP/域名</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">RUSTDESK_API_RUSTDESK_KEY=&lt;自定义key&gt;</span> <span class="comment">#输入自定义key</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">21114</span><span class="string">:21114</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">lejianwen/rustdesk-api</span></span><br><span class="line">    <span class="string">volumes:**粗体文本**</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/data/rustdesk/api:/app/data</span> <span class="comment">#将数据库挂载出来方便备份</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">rustdesk-net</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br></pre></td></tr></table></figure><p><strong>点击开始编排，执行！</strong></p><hr><h4 id="3-API的使用"><a href="#3-API的使用" class="headerlink" title="3.API的使用"></a>3.API的使用</h4><p>输入以下地址访问API后台，<strong>默认用户名和密码为admin</strong></p><blockquote><p>http:&#x2F;&#x2F;&lt;你的服务器IP&#x2F;域名&gt;:21114</p></blockquote><p><strong>注</strong>：作者新的API密码是随机生成的，<strong>可能不是admin，需要修改一下</strong></p><p>在宝塔&#x2F;1Panel面板容器找到<strong>rustdesk-api容器</strong>，以root身份打开容器终端(sh),输入以下命令修改API密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./apimain reset-admin-pwd &lt;自定义的密码&gt;</span><br></pre></td></tr></table></figure><p>注：由于官方API是收费的，所以采用这个第三方API(端口为21114的容器)，可以使我们更便捷的管理我们的远程设备</p><hr><h3 id="云服务器源码直接部署"><a href="#云服务器源码直接部署" class="headerlink" title="云服务器源码直接部署"></a>云服务器源码直接部署</h3><h4 id="1-利用已有ssh工具远程连接云服务器"><a href="#1-利用已有ssh工具远程连接云服务器" class="headerlink" title="1.利用已有ssh工具远程连接云服务器"></a>1.利用已有ssh工具远程连接云服务器</h4><p>以下任性其一即可</p><blockquote><ul><li><a href="https://windterm.com.cn/download">WindTerm</a></li><li><a href="https://www.xshell.com/zh/xshell/">Xshell</a></li><li><a href="https://www.chiark.greenend.org.uk/~sgtatham/putty/">PUTTY</a></li><li><a href="https://hyper.is/">Hyper</a></li><li><a href="https://mobaxterm.mobatek.net/">MobaXterm</a></li></ul></blockquote><h4 id="2-部署rustdesk中继服务器"><a href="#2-部署rustdesk中继服务器" class="headerlink" title="2.部署rustdesk中继服务器"></a>2.部署rustdesk中继服务器</h4><p>输入以下命令(<strong>以下是ubuntu环境</strong>）</p><h5 id="切换到root"><a href="#切换到root" class="headerlink" title="切换到root"></a>切换到root</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> -s</span><br></pre></td></tr></table></figure><h5 id="更新软件包"><a href="#更新软件包" class="headerlink" title="更新软件包"></a>更新软件包</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-update</span><br><span class="line">apt-upgrade</span><br></pre></td></tr></table></figure><h5 id="部署rustdesk-server"><a href="#部署rustdesk-server" class="headerlink" title="部署rustdesk server"></a>部署rustdesk server</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://raw.gitmirror.com/smianao/rustdeskinstall/master/install.sh &amp;&amp; chmod +x install.sh &amp;&amp; ./install.sh</span><br></pre></td></tr></table></figure><p><strong>记录最终Public Key信息</strong></p><h2 id="rustdesk使用"><a href="#rustdesk使用" class="headerlink" title="rustdesk使用"></a>rustdesk使用</h2><ul><li><p>rustdesk客户端，设置(Settings)的网络(Network)中编辑中继服务器(ID&#x2F;Relay server)</p><blockquote><p>ID 服务器(ID server): <code>&lt;你的服务器IP&gt;</code><br>中继服务器(Relay server)：<code>&lt;你的服务器IP&gt;</code><br>API服务器(API server)：<code>http://&lt;你的服务器IP&gt;:21114 | 如果没部署API(上面的容器部署)，则不用填</code><br>Key(Key)：<code>&lt;你的中继服务器key&gt;</code></p></blockquote></li><li><p>rustdesk客户端，设置(Settings)中账户(Accout)登录(Login)</p><blockquote><p>用户名(Username)：<code>admin</code><br>密码(Password)：<code>&lt;你的API密码 | default(&#39;admin&#39;)&gt;</code></p></blockquote></li></ul>]]></content>
      
      
      <categories>
          
          <category> 部署教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 部署 </tag>
            
            <tag> rustdesk </tag>
            
            <tag> 中继服务器 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
